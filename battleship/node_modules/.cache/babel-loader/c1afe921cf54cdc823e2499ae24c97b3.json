{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gurum\\\\Documents\\\\AI project\\\\battleship\\\\src\\\\components\\\\Table.js\",\n    _s = $RefreshSig$();\n\nimport Image from './Image';\nimport Container from 'react-bootstrap/Container';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Table = props => {\n  _s();\n\n  const player = Object.freeze({\n    name: props.player,\n    cells: [],\n    ship: [],\n    founded: 0\n  });\n  const [playerState, setPlayerState] = useState(player);\n  var gameover = false;\n\n  function generateShip(player) {\n    for (let i = 0; i < 10; i++) {\n      setPlayerState({ ...playerState,\n        ship: ship.push(randomShip(0, 24, ship))\n      });\n      console.log(player.ship);\n    }\n  }\n\n  function getRandomInt(min, max) {\n    const minimum = Math.ceil(min);\n    const maximum = Math.floor(max);\n    return Math.floor(Math.random() * (maximum - minimum + 1)) + minimum;\n  }\n\n  function randomShip(min, max, excludeArrayNumbers) {\n    let randomNumber;\n\n    if (!Array.isArray(excludeArrayNumbers)) {\n      randomNumber = getRandomInt(min, max);\n      return randomNumber;\n    }\n\n    do {\n      randomNumber = getRandomInt(min, max);\n    } while ((excludeArrayNumbers || []).includes(randomNumber));\n\n    return randomNumber;\n  }\n\n  function play(e) {\n    console.log(e);\n    checkShip(player, e);\n\n    if (gameover) {\n      end(props.player);\n    }\n  }\n\n  function checkShip(player, e) {\n    if (player.ship.includes(e.target)) {\n      player.founded = player.founded + 1;\n      player.point.innerHTML = 'Founded ship: ' + player.founded;\n\n      if (player.founded === 10) {\n        gameover = true;\n      }\n\n      foundShip(player, e);\n    } else {\n      notFound(player, e);\n    }\n  }\n\n  function notFound(player, e) {\n    console.log(player.name + ': nothing here...');\n    e.target.src = 'https://tmsvalue.co.uk/wp-content/uploads/2017/03/Square-500x500-red.png';\n  }\n\n  function foundShip(player, e) {\n    console.log(player.name + ': FOUND SHIP!!!');\n    e.target.src = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR9qcrQeLufxv61jZ194tG5CJvux0p4U4-r2g&usqp=CAU';\n  }\n\n  function end(player) {\n    console.log(player + 'WIN!!!');\n  }\n\n  useEffect(() => {\n    generateShip(player);\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.player\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: Array.from({\n        length: 10\n      }).map((_, row) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Array.from({\n            length: 10\n          }).map((_, col) => {\n            var index = (10 - row - 1) * 10 + (10 - col);\n            var src = 'map/' + index + '.jpg';\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"cell\",\n              onClick: play,\n              children: /*#__PURE__*/_jsxDEV(Image, {\n                src: src\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 86\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Table, \"KzrVYW86ABp7zLDQcs4XITTa6AA=\");\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/gurum/Documents/AI project/battleship/src/components/Table.js"],"names":["Image","Container","useEffect","useState","Table","props","player","Object","freeze","name","cells","ship","founded","playerState","setPlayerState","gameover","generateShip","i","push","randomShip","console","log","getRandomInt","min","max","minimum","Math","ceil","maximum","floor","random","excludeArrayNumbers","randomNumber","Array","isArray","includes","play","e","checkShip","end","target","point","innerHTML","foundShip","notFound","src","from","length","map","_","row","col","index"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AAErB,QAAMC,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc;AACzBC,IAAAA,IAAI,EAAEJ,KAAK,CAACC,MADa;AAEzBI,IAAAA,KAAK,EAAE,EAFkB;AAGzBC,IAAAA,IAAI,EAAE,EAHmB;AAIzBC,IAAAA,OAAO,EAAE;AAJgB,GAAd,CAAf;AAMA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAACG,MAAD,CAA9C;AAEA,MAAIS,QAAQ,GAAG,KAAf;;AAEA,WAASC,YAAT,CAAsBV,MAAtB,EAA8B;AAC1B,SAAI,IAAIW,CAAC,GAAG,CAAZ,EAAcA,CAAC,GAAG,EAAlB,EAAqBA,CAAC,EAAtB,EAAyB;AACrBH,MAAAA,cAAc,CAAC,EACX,GAAGD,WADQ;AAEXF,QAAAA,IAAI,EAAEA,IAAI,CAACO,IAAL,CAAUC,UAAU,CAAC,CAAD,EAAI,EAAJ,EAAQR,IAAR,CAApB;AAFK,OAAD,CAAd;AAIAS,MAAAA,OAAO,CAACC,GAAR,CAAYf,MAAM,CAACK,IAAnB;AACH;AACJ;;AAED,WAASW,YAAT,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AAC5B,UAAMC,OAAO,GAAGC,IAAI,CAACC,IAAL,CAAUJ,GAAV,CAAhB;AACA,UAAMK,OAAO,GAAGF,IAAI,CAACG,KAAL,CAAWL,GAAX,CAAhB;AAEA,WAAOE,IAAI,CAACG,KAAL,CAAWH,IAAI,CAACI,MAAL,MAAiBF,OAAO,GAAGH,OAAV,GAAoB,CAArC,CAAX,IAAsDA,OAA7D;AACF;;AAEF,WAASN,UAAT,CAAoBI,GAApB,EAAyBC,GAAzB,EAA8BO,mBAA9B,EAAmD;AAC/C,QAAIC,YAAJ;;AAEA,QAAG,CAACC,KAAK,CAACC,OAAN,CAAcH,mBAAd,CAAJ,EAAwC;AACtCC,MAAAA,YAAY,GAAGV,YAAY,CAACC,GAAD,EAAMC,GAAN,CAA3B;AACA,aAAOQ,YAAP;AACD;;AAED,OAAG;AACDA,MAAAA,YAAY,GAAGV,YAAY,CAACC,GAAD,EAAMC,GAAN,CAA3B;AACD,KAFD,QAES,CAACO,mBAAmB,IAAI,EAAxB,EAA4BI,QAA5B,CAAqCH,YAArC,CAFT;;AAIA,WAAOA,YAAP;AACH;;AAED,WAASI,IAAT,CAAcC,CAAd,EAAiB;AACbjB,IAAAA,OAAO,CAACC,GAAR,CAAYgB,CAAZ;AACAC,IAAAA,SAAS,CAAChC,MAAD,EAAS+B,CAAT,CAAT;;AAEA,QAAGtB,QAAH,EAAY;AACRwB,MAAAA,GAAG,CAAClC,KAAK,CAACC,MAAP,CAAH;AACH;AACJ;;AAED,WAASgC,SAAT,CAAmBhC,MAAnB,EAA2B+B,CAA3B,EAA8B;AAC1B,QAAG/B,MAAM,CAACK,IAAP,CAAYwB,QAAZ,CAAqBE,CAAC,CAACG,MAAvB,CAAH,EAAkC;AAC9BlC,MAAAA,MAAM,CAACM,OAAP,GAAiBN,MAAM,CAACM,OAAP,GAAiB,CAAlC;AACAN,MAAAA,MAAM,CAACmC,KAAP,CAAaC,SAAb,GAAyB,mBAAmBpC,MAAM,CAACM,OAAnD;;AACA,UAAGN,MAAM,CAACM,OAAP,KAAmB,EAAtB,EAA0B;AACtBG,QAAAA,QAAQ,GAAG,IAAX;AACH;;AACD4B,MAAAA,SAAS,CAACrC,MAAD,EAAS+B,CAAT,CAAT;AACH,KAPD,MAQK;AACDO,MAAAA,QAAQ,CAACtC,MAAD,EAAS+B,CAAT,CAAR;AACH;AACJ;;AAED,WAASO,QAAT,CAAkBtC,MAAlB,EAA0B+B,CAA1B,EAA6B;AACzBjB,IAAAA,OAAO,CAACC,GAAR,CAAYf,MAAM,CAACG,IAAP,GAAc,mBAA1B;AACA4B,IAAAA,CAAC,CAACG,MAAF,CAASK,GAAT,GAAe,0EAAf;AACH;;AAED,WAASF,SAAT,CAAmBrC,MAAnB,EAA2B+B,CAA3B,EAA8B;AAC1BjB,IAAAA,OAAO,CAACC,GAAR,CAAYf,MAAM,CAACG,IAAP,GAAc,iBAA1B;AACA4B,IAAAA,CAAC,CAACG,MAAF,CAASK,GAAT,GAAe,qGAAf;AACH;;AAED,WAASN,GAAT,CAAajC,MAAb,EAAqB;AACjBc,IAAAA,OAAO,CAACC,GAAR,CAAYf,MAAM,GAAG,QAArB;AACH;;AAEDJ,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,YAAY,CAACV,MAAD,CAAZ;AACH,GAFQ,CAAT;AAIA,sBACI,QAAC,SAAD;AAAA,4BACI;AAAA,gBAAKD,KAAK,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBACK2B,KAAK,CAACa,IAAN,CAAW;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAX,EAA2BC,GAA3B,CAA+B,CAACC,CAAD,EAAIC,GAAJ,KAAY;AACxC,4BACI;AAAA,oBACKjB,KAAK,CAACa,IAAN,CAAW;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAAX,EAA2BC,GAA3B,CAA+B,CAACC,CAAD,EAAIE,GAAJ,KAAY;AACxC,gBAAIC,KAAK,GAAI,CAAC,KAAKF,GAAL,GAAW,CAAZ,IAAiB,EAAlB,IAAyB,KAAKC,GAA9B,CAAZ;AACA,gBAAIN,GAAG,GAAG,SAASO,KAAT,GAAiB,MAA3B;AACA,gCACI;AAAgB,cAAA,SAAS,EAAC,MAA1B;AAAiC,cAAA,OAAO,EAAEhB,IAA1C;AAAA,qCAAiD,QAAC,KAAD;AAAO,gBAAA,GAAG,EAAES;AAAZ;AAAA;AAAA;AAAA;AAAA;AAAjD,eAASO,KAAT;AAAA;AAAA;AAAA;AAAA,oBADJ;AAGH,WANA;AADL;AAAA;AAAA;AAAA;AAAA,gBADJ;AAWH,OAZA;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAzGD;;GAAMhD,K;;KAAAA,K;AA2GN,eAAeA,KAAf","sourcesContent":["import Image from './Image'\r\nimport Container from 'react-bootstrap/Container'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst Table = (props) => {\r\n\r\n    const player = Object.freeze({\r\n        name: props.player,\r\n        cells: [],\r\n        ship: [],\r\n        founded: 0,\r\n    })\r\n    const [playerState, setPlayerState] = useState(player)\r\n\r\n    var gameover = false\r\n\r\n    function generateShip(player) {\r\n        for(let i = 0;i < 10;i++){\r\n            setPlayerState({\r\n                ...playerState,\r\n                ship: ship.push(randomShip(0, 24, ship))\r\n            })\r\n            console.log(player.ship)\r\n        }\r\n    }\r\n\r\n    function getRandomInt(min, max) {\r\n        const minimum = Math.ceil(min);\r\n        const maximum = Math.floor(max);\r\n     \r\n        return Math.floor(Math.random() * (maximum - minimum + 1)) + minimum;\r\n     }\r\n    \r\n    function randomShip(min, max, excludeArrayNumbers) {\r\n        let randomNumber;\r\n      \r\n        if(!Array.isArray(excludeArrayNumbers)) {\r\n          randomNumber = getRandomInt(min, max);\r\n          return randomNumber;\r\n        }\r\n      \r\n        do {\r\n          randomNumber = getRandomInt(min, max);\r\n        } while ((excludeArrayNumbers || []).includes(randomNumber));\r\n      \r\n        return randomNumber;\r\n    }\r\n\r\n    function play(e) {\r\n        console.log(e)\r\n        checkShip(player, e)\r\n        \r\n        if(gameover){\r\n            end(props.player)\r\n        }\r\n    }\r\n\r\n    function checkShip(player, e) {\r\n        if(player.ship.includes(e.target)){\r\n            player.founded = player.founded + 1\r\n            player.point.innerHTML = 'Founded ship: ' + player.founded\r\n            if(player.founded === 10) {\r\n                gameover = true\r\n            }\r\n            foundShip(player, e)\r\n        }\r\n        else {\r\n            notFound(player, e)\r\n        }\r\n    }\r\n\r\n    function notFound(player, e) {\r\n        console.log(player.name + ': nothing here...')\r\n        e.target.src = 'https://tmsvalue.co.uk/wp-content/uploads/2017/03/Square-500x500-red.png'\r\n    }\r\n    \r\n    function foundShip(player, e) {\r\n        console.log(player.name + ': FOUND SHIP!!!')\r\n        e.target.src = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR9qcrQeLufxv61jZ194tG5CJvux0p4U4-r2g&usqp=CAU'\r\n    }\r\n    \r\n    function end(player) {\r\n        console.log(player + 'WIN!!!')\r\n    }\r\n\r\n    useEffect(() => {\r\n        generateShip(player)\r\n    })\r\n\r\n    return (\r\n        <Container>\r\n            <h2>{props.player}</h2>\r\n            <table>\r\n                {Array.from({ length: 10 }).map((_, row) => {\r\n                    return (\r\n                        <tr>\r\n                            {Array.from({ length: 10 }).map((_, col) => {\r\n                                var index = ((10 - row - 1) * 10) + (10 - col)\r\n                                var src = 'map/' + index + '.jpg'\r\n                                return (\r\n                                    <td key={index} className='cell' onClick={play} ><Image src={src} /></td>\r\n                                )\r\n                            })}\r\n                        </tr>\r\n                    )\r\n                })}\r\n            </table>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Table\r\n"]},"metadata":{},"sourceType":"module"}