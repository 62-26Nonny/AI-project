{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\witoo\\\\Desktop\\\\Battle Ship AI\\\\AI-project\\\\battleship\\\\src\\\\components\\\\Table.js\",\n    _s = $RefreshSig$();\n\nimport Container from 'react-bootstrap/Container';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Table = props => {\n  _s();\n\n  //สร้างรูปแบบ state ของ player\n  const player = Object.freeze({\n    name: props.player,\n    boardn    position: Array.from([]),\n    founded: 0\n  }); //สร้าง plyer state โดยใช้รูปแบบ player\n\n  const [playerState, setPlayerState] = useState(player);\n  var gameover = false; // ฟังก์ชั่นสุ่มเลขโดยรับค่า min max\n\n  function getRandomInt(min, max) {\n    const minimum = Math.ceil(min);\n    const maximum = Math.floor(max);\n    return Math.floor(Math.random() * (maximum - minimum + 1)) + minimum;\n  } // ฟังก์ชั่นสุ่มตำแหน่งหัวเรือโดยรับ min max และ arrayไว้เก็บตำแหน่งเรือ\n\n\n  function randomShip(min, max, excludeArrayNumbers) {\n    let randomNumber; // เช็คว่า excludeArrayNumbers เป็น array หรือไม่???\n\n    if (!Array.isArray(excludeArrayNumbers)) {\n      randomNumber = getRandomInt(min, max);\n      return randomNumber;\n    } // ให้สุ่มตำแหน่งหัวเรือเรื่อยๆ จนกว่าตำแหน่งที่ได้ไม่ซ้ำกับตำแหน่งที่มี หรือเมื่อเป็น array ว่าง\n\n\n    do {\n      randomNumber = getRandomInt(min, max);\n    } while ((excludeArrayNumbers || []).includes(randomNumber));\n\n    return randomNumber;\n  } // ฟั่งชั่นที่ทำงานเมื่อผู้เล่นกดช่องตาราง \n\n\n  function play(e) {\n    //เช็คว่ามีเรือรึเปล่า\n    var found = checkShip(e); // เมื่อเจอเรือให้บวกแต้มฝั่งผู้เล่นที่เจอ\n\n    if (found) {\n      foundShip(e);\n      setPlayerState({ ...playerState,\n        founded: playerState.founded + 1\n      }); // เมื่อแต้มครบ จบเกม\n\n      if (playerState.founded === 10) {\n        gameover = true;\n      }\n    } else {\n      notFound(e);\n    } //เช็คว่าเกมจบรึยัง\n\n\n    if (gameover) {\n      //เมื่อจบแล้วไปแสดงหน้าจบเกม\n      end();\n    }\n  } // ฟังก์ชั่นสุ่มสำหรับเซ็กว่าผู้เล่นยิงโดนเรือตรงข้ามหรือไม่\n\n\n  function checkShip(e) {\n    // ให้ตัวแปล clicked เก็บตำแหน่งที่ผู้เล่นกด\n    var clicked = [parseInt(e.target.id[0]), parseInt(e.target.id[2])]; // เช็คว่าเจอเรือไหม (เรือ: \"O\")\n\n    if (playerState.board[clicked[0] + 1][clicked[1] + 1] === \"O\") {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  function notFound(e) {\n    console.log(playerState.name + ': nothing here...');\n    e.target.src = 'https://tmsvalue.co.uk/wp-content/uploads/2017/03/Square-500x500-red.png';\n  }\n\n  function foundShip(e) {\n    console.log(playerState.name + ': FOUND SHIP!!!');\n    e.target.src = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR9qcrQeLufxv61jZ194tG5CJvux0p4U4-r2g&usqp=CAU';\n  }\n\n  function end() {\n    console.log(playerState.name + 'WIN!!!');\n  }\n  /* ต้องลงได้ทั้ง 4 ทิศ ถึงจะผ่าน */\n\n\n  function placeable(head, length) {\n    try {\n      for (let axis = 0; axis < 2; axis++) {\n        for (let i = head[axis] - (length - 1); i < head[axis] + (length - 1); i++) {\n          let temp;\n          if (axis === 0) temp = playerState.board[i][head[1]];else temp = playerState.board[head[0]][i];\n\n          if (temp === '-') {\n            continue;\n          } else {\n            /* ถ้าวางไม่ได้ ยกเลิกทันที */\n            return false;\n          }\n        }\n      }\n\n      return true;\n    } catch (TypeError) {\n      /* โค้ดไม่ได้แยกแยะเรื่องหลุดแมพ ทำให้ TypeError ถ้าเลือกขอบแมพแล้วขนาดยาวจนเกิน Board (เกิน Length array ของ board) ซึ่งถ้าเป็นแบบนี้มันลงไม่ได้อยู่แล้ว return false ไปเลย*/\n      return false;\n    }\n  }\n  /* Algo's test case\r\n  let prow1 = [1, 10]\r\n  let prow2 = [4, 6]\r\n  let prow3 = [8, 3]\r\n  */\n\n  /* Algo's test case\r\n  let isPlaceable1 = placeable(prow1, shipLength, board)\r\n  let isPlaceable2 = placeable(prow2, shipLength, board)\r\n  let isPlaceable3 = placeable(prow3, shipLength, board)\r\n  console.log(\"Map's edge case : \", isPlaceable1)\r\n  console.log(\"Board occupied case (By other ship) : \", isPlaceable2)\r\n  console.log(\"No case : \", isPlaceable3)\r\n  */\n\n\n  function generateShip(shipLength) {\n    let prow = [];\n    let isPlaceable;\n\n    do {\n      for (let axis = 0; axis < 2; axis++) {\n        prow[axis] = getRandomInt(0, 10);\n      }\n\n      isPlaceable = placeable(prow, shipLength);\n    } while (!isPlaceable);\n\n    playerState.board[prow[0]][prow[1]] = 'O';\n    /* วางเรือ แบบสุ่มทิศ */\n\n    switch (getRandomInt(1, 4)) {\n      case 1:\n        for (let i = prow[0]; i < prow[0] + shipLength; i++) {\n          playerState.board[i][prow[1]] = 'O';\n        }\n\n        break;\n\n      case 2:\n        for (let i = prow[1]; i < prow[1] + shipLength; i++) {\n          playerState.board[prow[0]][i] = 'O';\n        }\n\n        break;\n\n      case 3:\n        for (let i = prow[0] - (shipLength - 1); i < prow[0]; i++) {\n          playerState.board[i][prow[1]] = 'O';\n        }\n\n        break;\n\n      case 4:\n        for (let i = prow[1] - (shipLength - 1); i < prow[1]; i++) {\n          playerState.board[prow[0]][i] = 'O';\n        }\n\n        break;\n    }\n  }\n\n  useEffect(() => {\n    generateShip(2); // generateShip(3)\n    // generateShip(2)\n    // generateShip(3)\n    // generateShip(4)\n\n    console.log(playerState.name + \" board: \");\n    console.log(playerState.board);\n  }, [setPlayerState]); // สร้างตารางโดยรับค่า id และ src\n\n  const createCell = (id, src) => {\n    // ถ้าเป็นแถวแรกให้สร้าง header ระบุเลขช่องด้วยนอกจากนั้นก็สร้างแค่ช่องปกติ\n    if (id[0] === 0) {\n      return /*#__PURE__*/_jsxDEV(\"th\", {\n        children: [id[1] + 1, /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"cell parent\",\n          onDrop: drop,\n          onDragOver: allowDrop,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            class: \"image1\",\n            id: id,\n            src: src,\n            onClick: play,\n            draggable: \"false\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this);\n    } // if (id[0] === 1 && id[1] === 5){\n    //     return(\n    //         <td className='cell'>\n    //             <div class=\"parent\">\n    //                 <img class=\"image1\" id={id} src={src} onClick={play} />\n    //                 <img class=\"image2\" src=\"img\\cu\\1.png\" />\n    //             </div>\n    //         </td>\n    //     )\n    // }\n\n\n    return /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"cell parent\",\n      onDrop: drop,\n      onDragOver: allowDrop,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        class: \"image1\",\n        id: id,\n        src: src,\n        onClick: play,\n        draggable: \"false\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }, this);\n  };\n\n  function allowDrop(ev) {\n    ev.preventDefault();\n  }\n\n  function drop(ev) {\n    var cell_id = ev.target.id;\n    var row = parseInt(cell_id.slice(0, 1));\n    var col = parseInt(cell_id.slice(2));\n    console.log(row + ' ' + col);\n    console.log(cell_id);\n    ev.preventDefault();\n    var data = ev.dataTransfer.getData(\"text\");\n    var ship = document.getElementById(data);\n    console.log(ship); // (ev.target).insertAdjacentElement('afterend', (ship));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.player\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: Array.from({\n        length: 10\n      }).map((_, row) => {\n        var ascii = 65;\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: String.fromCharCode(ascii + row)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 29\n          }, this), Array.from({\n            length: 10\n          }).map((_, col) => {\n            var index = (10 - row - 1) * 10 + (10 - col);\n            var id = [row, col];\n            var src = 'map/' + index + '.jpg';\n            return createCell(id, src);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Table, \"KzrVYW86ABp7zLDQcs4XITTa6AA=\");\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/witoo/Desktop/Battle Ship AI/AI-project/battleship/src/components/Table.js"],"names":["Container","useEffect","useState","Table","props","player","Object","freeze","name","board","position","Array","from","founded","playerState","setPlayerState","gameover","getRandomInt","min","max","minimum","Math","ceil","maximum","floor","random","randomShip","excludeArrayNumbers","randomNumber","isArray","includes","play","e","found","checkShip","foundShip","notFound","end","clicked","parseInt","target","id","console","log","src","placeable","head","length","axis","i","temp","TypeError","generateShip","shipLength","prow","isPlaceable","createCell","drop","allowDrop","ev","preventDefault","cell_id","row","slice","col","data","dataTransfer","getData","ship","document","getElementById","map","_","ascii","String","fromCharCode","index"],"mappings":"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","sourcesContent":["import Container from 'react-bootstrap/Container'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst Table = (props) => {\r\n\r\n    //สร้างรูปแบบ state ของ player\r\n    const player = Object.freeze({\r\n        name: props.player,\r\n        board: [\r\n            ['X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X']\r\n        ],\r\n        position: Array.from([]),\r\n        founded: 0,\r\n    })\r\n\r\n    //สร้าง plyer state โดยใช้รูปแบบ player\r\n    const [playerState, setPlayerState] = useState(player)\r\n\r\n    var gameover = false\r\n\r\n    // ฟังก์ชั่นสุ่มเลขโดยรับค่า min max\r\n    function getRandomInt(min, max) {\r\n        const minimum = Math.ceil(min);\r\n        const maximum = Math.floor(max);\r\n\r\n        return Math.floor(Math.random() * (maximum - minimum + 1)) + minimum;\r\n    }\r\n\r\n    // ฟังก์ชั่นสุ่มตำแหน่งหัวเรือโดยรับ min max และ arrayไว้เก็บตำแหน่งเรือ\r\n    function randomShip(min, max, excludeArrayNumbers) {\r\n        let randomNumber;\r\n\r\n        // เช็คว่า excludeArrayNumbers เป็น array หรือไม่???\r\n        if (!Array.isArray(excludeArrayNumbers)) {\r\n            randomNumber = getRandomInt(min, max);\r\n            return randomNumber;\r\n        }\r\n\r\n        // ให้สุ่มตำแหน่งหัวเรือเรื่อยๆ จนกว่าตำแหน่งที่ได้ไม่ซ้ำกับตำแหน่งที่มี หรือเมื่อเป็น array ว่าง\r\n        do {\r\n            randomNumber = getRandomInt(min, max);\r\n        } while ((excludeArrayNumbers || []).includes(randomNumber));\r\n\r\n        return randomNumber;\r\n    }\r\n\r\n    // ฟั่งชั่นที่ทำงานเมื่อผู้เล่นกดช่องตาราง \r\n    function play(e) {\r\n        //เช็คว่ามีเรือรึเปล่า\r\n        var found = checkShip(e)\r\n\r\n        // เมื่อเจอเรือให้บวกแต้มฝั่งผู้เล่นที่เจอ\r\n        if (found) {\r\n            foundShip(e)\r\n            setPlayerState({\r\n                ...playerState,\r\n                founded: playerState.founded + 1\r\n            })\r\n            // เมื่อแต้มครบ จบเกม\r\n            if (playerState.founded === 10) {\r\n                gameover = true\r\n            }\r\n        }\r\n        else {\r\n            notFound(e)\r\n        }\r\n\r\n        //เช็คว่าเกมจบรึยัง\r\n        if (gameover) {\r\n            //เมื่อจบแล้วไปแสดงหน้าจบเกม\r\n            end()\r\n        }\r\n    }\r\n\r\n    // ฟังก์ชั่นสุ่มสำหรับเซ็กว่าผู้เล่นยิงโดนเรือตรงข้ามหรือไม่\r\n    function checkShip(e) {\r\n        // ให้ตัวแปล clicked เก็บตำแหน่งที่ผู้เล่นกด\r\n        var clicked = [parseInt(e.target.id[0]), parseInt(e.target.id[2])]\r\n\r\n        // เช็คว่าเจอเรือไหม (เรือ: \"O\")\r\n        if (playerState.board[clicked[0] + 1][clicked[1] + 1] === \"O\") {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    function notFound(e) {\r\n        console.log(playerState.name + ': nothing here...')\r\n        e.target.src = 'https://tmsvalue.co.uk/wp-content/uploads/2017/03/Square-500x500-red.png'\r\n    }\r\n\r\n    function foundShip(e) {\r\n        console.log(playerState.name + ': FOUND SHIP!!!')\r\n        e.target.src = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR9qcrQeLufxv61jZ194tG5CJvux0p4U4-r2g&usqp=CAU'\r\n    }\r\n\r\n    function end() {\r\n        console.log(playerState.name + 'WIN!!!')\r\n    }\r\n\r\n    /* ต้องลงได้ทั้ง 4 ทิศ ถึงจะผ่าน */\r\n    function placeable(head, length) {\r\n\r\n        try {\r\n            for (let axis = 0; axis < 2; axis++) {\r\n                for (let i = head[axis] - (length - 1); i < head[axis] + (length - 1); i++) {\r\n                    let temp\r\n\r\n                    if (axis === 0)\r\n                        temp = playerState.board[i][head[1]]\r\n                    else\r\n                        temp = playerState.board[head[0]][i]\r\n\r\n                    if (temp === '-') {\r\n                        continue\r\n                    }\r\n                    else {\r\n                        /* ถ้าวางไม่ได้ ยกเลิกทันที */\r\n                        return false\r\n                    }\r\n                }\r\n            }\r\n\r\n            return true\r\n\r\n        } catch (TypeError) {\r\n            /* โค้ดไม่ได้แยกแยะเรื่องหลุดแมพ ทำให้ TypeError ถ้าเลือกขอบแมพแล้วขนาดยาวจนเกิน Board (เกิน Length array ของ board) ซึ่งถ้าเป็นแบบนี้มันลงไม่ได้อยู่แล้ว return false ไปเลย*/\r\n            return false\r\n        }\r\n    }\r\n\r\n    /* Algo's test case\r\n    let prow1 = [1, 10]\r\n    let prow2 = [4, 6]\r\n    let prow3 = [8, 3]\r\n    */\r\n\r\n    /* Algo's test case\r\n    let isPlaceable1 = placeable(prow1, shipLength, board)\r\n    let isPlaceable2 = placeable(prow2, shipLength, board)\r\n    let isPlaceable3 = placeable(prow3, shipLength, board)\r\n    console.log(\"Map's edge case : \", isPlaceable1)\r\n    console.log(\"Board occupied case (By other ship) : \", isPlaceable2)\r\n    console.log(\"No case : \", isPlaceable3)\r\n    */\r\n\r\n    function generateShip(shipLength) {\r\n        let prow = []\r\n        let isPlaceable\r\n\r\n        do {\r\n            for (let axis = 0; axis < 2; axis++) {\r\n                prow[axis] = getRandomInt(0, 10)\r\n            }\r\n            isPlaceable = placeable(prow, shipLength)\r\n        } while (!isPlaceable)\r\n\r\n        playerState.board[prow[0]][prow[1]] = 'O'\r\n        /* วางเรือ แบบสุ่มทิศ */\r\n        switch (getRandomInt(1, 4)) {\r\n            case 1:\r\n                for (let i = prow[0]; i < prow[0] + shipLength; i++) {\r\n                    playerState.board[i][prow[1]] = 'O';\r\n                }\r\n                break;\r\n            case 2:\r\n                for (let i = prow[1]; i < prow[1] + shipLength; i++) {\r\n                    playerState.board[prow[0]][i] = 'O';\r\n                }\r\n                break;\r\n            case 3:\r\n                for (let i = prow[0] - (shipLength - 1); i < prow[0]; i++) {\r\n                    playerState.board[i][prow[1]] = 'O';\r\n                }\r\n                break;\r\n            case 4:\r\n                for (let i = prow[1] - (shipLength - 1); i < prow[1]; i++) {\r\n                    playerState.board[prow[0]][i] = 'O';\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        generateShip(2)\r\n        // generateShip(3)\r\n        // generateShip(2)\r\n        // generateShip(3)\r\n        // generateShip(4)\r\n        console.log(playerState.name + \" board: \")\r\n        console.log(playerState.board)\r\n    }, [setPlayerState])\r\n\r\n    // สร้างตารางโดยรับค่า id และ src\r\n    const createCell = (id, src) => {\r\n\r\n\r\n        // ถ้าเป็นแถวแรกให้สร้าง header ระบุเลขช่องด้วยนอกจากนั้นก็สร้างแค่ช่องปกติ\r\n        if (id[0] === 0) {\r\n            return (\r\n                <th>\r\n                    {id[1] + 1}\r\n                    <td className='cell parent' onDrop={drop} onDragOver={allowDrop} >\r\n                        <img class=\"image1\"  id={id} src={src} onClick={play} draggable='false'  />\r\n                    </td>\r\n                </th>\r\n            )\r\n        }\r\n        // if (id[0] === 1 && id[1] === 5){\r\n\r\n        //     return(\r\n        //         <td className='cell'>\r\n        //             <div class=\"parent\">\r\n        //                 <img class=\"image1\" id={id} src={src} onClick={play} />\r\n        //                 <img class=\"image2\" src=\"img\\cu\\1.png\" />\r\n        //             </div>\r\n        //         </td>\r\n        //     )\r\n        // }\r\n        return (\r\n            <td className='cell parent' onDrop={drop} onDragOver={allowDrop} >\r\n                <img class=\"image1\" id={id} src={src} onClick={play} draggable='false' />\r\n            </td>\r\n        )\r\n    }\r\n\r\n    function allowDrop(ev) {\r\n        ev.preventDefault();\r\n    }\r\n\r\n    function drop(ev) {\r\n        var cell_id = ev.target.id\r\n        var row = parseInt(cell_id.slice(0,1))\r\n        var col =  parseInt(cell_id.slice(2))\r\n\r\n        console.log(row + ' ' + col)\r\n        console.log(cell_id)\r\n        ev.preventDefault();\r\n        var data = ev.dataTransfer.getData(\"text\");\r\n        var ship = document.getElementById(data)\r\n\r\n        console.log(ship)\r\n\r\n        // (ev.target).insertAdjacentElement('afterend', (ship));\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <h2>{props.player}</h2>\r\n            <table>\r\n\r\n                {Array.from({ length: 10 }).map((_, row) => {\r\n\r\n                    var ascii = 65\r\n                    return (\r\n                        <tr>\r\n                            <th>\r\n                                {String.fromCharCode(ascii + row)}\r\n                            </th>\r\n                            {Array.from({ length: 10 }).map((_, col) => {\r\n                                var index = ((10 - row - 1) * 10) + (10 - col)\r\n                                var id = [row, col]\r\n                                var src = 'map/' + index + '.jpg'\r\n                                return (\r\n                                    createCell(id, src)\r\n                                )\r\n\r\n                            })}\r\n                        </tr>\r\n                    )\r\n                })}\r\n            </table>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Table\r\n"]},"metadata":{},"sourceType":"module"}