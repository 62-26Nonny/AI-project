{"ast":null,"code":"export const AI = () => {\n  var max_position;\n  var table = document.getElementById('gurumi');\n  var cells = table.getElementsByClassName('image1');\n  var positions = Array.from(table.getElementsByClassName('gurumi image2'));\n  positions.forEach(index => console.log(index)); // randomly pick cell\n  // Give a value\n  // Click highest\n  // Calculate adjacent\n  // Give -1 \n};\n/*\r\nfunction calculateNextPos(playerState) {\r\n    for (var i = 0; i < 100; i++) {\r\n        playerState.positions[i].probability = 0\r\n    }\r\n\r\n    for (var i = 0; i < 100; i++) {\r\n        if (playerState.positions[i].fired){\r\n            if (playerState.positions[i].hit && !playerState.positions[i].sunk) {\r\n                for (var direction in directions) {\r\n                    var checked_position = playerState.positions[i]\r\n                    while (checked_position[direction] && checked_position[direction].hit && !checked_position[direction].sunk) {\r\n\r\n                        checked_position = checked_position[direction]\r\n                    }\r\n                    checked_position = checked_position[direction]\r\n                    if (checked_position && !checked_position.fired) {\r\n                        checked_position.probability += hitStreak * 100\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n*/\n\n_c = AI;\n\nvar _c;\n\n$RefreshReg$(_c, \"AI\");","map":{"version":3,"sources":["F:/Code/Project/AI-project/battleship/src/AI/AI_team2.js"],"names":["AI","max_position","table","document","getElementById","cells","getElementsByClassName","positions","Array","from","forEach","index","console","log"],"mappings":"AAAA,OAAO,MAAMA,EAAE,GAAG,MAAM;AACpB,MAAIC,YAAJ;AAEA,MAAIC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAZ;AACA,MAAIC,KAAK,GAAGH,KAAK,CAACI,sBAAN,CAA6B,QAA7B,CAAZ;AACA,MAAIC,SAAS,GAAGC,KAAK,CAACC,IAAN,CAAWP,KAAK,CAACI,sBAAN,CAA6B,eAA7B,CAAX,CAAhB;AACAC,EAAAA,SAAS,CAACG,OAAV,CAAkBC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAA3B,EANoB,CAQpB;AACA;AACA;AACA;AACA;AACH,CAbM;AAeP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KAvCaX,E","sourcesContent":["export const AI = () => {\r\n    var max_position\r\n\r\n    var table = document.getElementById('gurumi')\r\n    var cells = table.getElementsByClassName('image1')\r\n    var positions = Array.from(table.getElementsByClassName('gurumi image2'))\r\n    positions.forEach(index => console.log(index))\r\n\r\n    // randomly pick cell\r\n    // Give a value\r\n    // Click highest\r\n    // Calculate adjacent\r\n    // Give -1 \r\n}\r\n\r\n/*\r\nfunction calculateNextPos(playerState) {\r\n    for (var i = 0; i < 100; i++) {\r\n        playerState.positions[i].probability = 0\r\n    }\r\n\r\n    for (var i = 0; i < 100; i++) {\r\n        if (playerState.positions[i].fired){\r\n            if (playerState.positions[i].hit && !playerState.positions[i].sunk) {\r\n                for (var direction in directions) {\r\n                    var checked_position = playerState.positions[i]\r\n                    while (checked_position[direction] && checked_position[direction].hit && !checked_position[direction].sunk) {\r\n\r\n                        checked_position = checked_position[direction]\r\n                    }\r\n                    checked_position = checked_position[direction]\r\n                    if (checked_position && !checked_position.fired) {\r\n                        checked_position.probability += hitStreak * 100\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n*/"]},"metadata":{},"sourceType":"module"}