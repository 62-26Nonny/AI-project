{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gurum\\\\Documents\\\\AI project\\\\battleship\\\\src\\\\components\\\\Table.js\",\n    _s = $RefreshSig$();\n\nimport { Container, Button } from 'react-bootstrap';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Table = props => {\n  _s();\n\n  const randomness = 3;\n  var positions = [];\n\n  for (var i = 0; i < 100; i++) {\n    var row = Math.floor(i / 10);\n    var col = i % 10;\n    positions[i] = {\n      index: i,\n      probability: 0,\n      occupied: false,\n      fired: false,\n      hit: false,\n      sunk: false,\n      row: row,\n      col: col\n    };\n  }\n\n  for (var i = 0; i < 100; i++) {\n    positions[i].w = positions[i - 1] && positions[i - 1].row === positions[i].row ? positions[i - 1] : null;\n    positions[i].e = positions[i + 1] && positions[i + 1].row === positions[i].row ? positions[i + 1] : null;\n    positions[i].n = positions[i - 10] ? positions[i - 10] : null;\n    positions[i].s = positions[i + 10] ? positions[i + 10] : null;\n  } //สร้างรูปแบบ state ของ player\n\n\n  const player = Object.freeze({\n    name: props.player,\n    boardn    positions: Array.from(positions),\n    founded: 0,\n    ships: {\n      'battleship': {\n        alive: true,\n        length: 4,\n        position: 0,\n        orientation: 'vertical',\n        life: 4\n      },\n      'destroyer': {\n        alive: true,\n        length: 3,\n        position: 0,\n        orientation: 'vertical',\n        life: 3\n      },\n      'aircraftcarrier': {\n        alive: true,\n        length: 5,\n        position: 0,\n        orientation: 'vertical',\n        life: 5\n      },\n      'submarine': {\n        alive: true,\n        length: 3,\n        position: 0,\n        orientation: 'vertical',\n        life: 3\n      },\n      'patrolboat': {\n        alive: true,\n        length: 2,\n        position: 0,\n        orientation: 'vertical',\n        life: 2\n      }\n    }\n  }); //สร้าง plyer state โดยใช้รูปแบบ player\n\n  const [playerState, setPlayerState] = useState(player);\n\n  function tryShip(ship, position, direction, propertyToTest) {\n    var check_position = playerState.positions[position];\n    var flag = true;\n\n    for (var i = 1; i <= ship.length; i++) {\n      if (!check_position || check_position[propertyToTest]) {\n        flag = false;\n        break;\n      }\n\n      check_position = check_position[direction];\n    }\n\n    return flag;\n  }\n\n  function calculateDensity() {\n    var current_position;\n    var directions = {\n      'w': null,\n      'n': null,\n      'e': null,\n      's': null\n    };\n\n    for (var i = 0; i < 100; i++) {\n      playerState.positions[i].probability = 0;\n    }\n\n    for (var shipName in playerState.ships) {\n      var ship = playerState.ships[shipName];\n\n      if (ship.alive) {\n        for (var i = 0; i < 100; i++) {\n          if (tryShip(ship, i, 'e')) {\n            current_position = playerState.positions[i];\n\n            for (var j = 0; j < ship.length; j++) {\n              current_position.probability++;\n              current_position = current_position['e'];\n            }\n          }\n\n          if (tryShip(ship, i, 's')) {\n            current_position = playerState.positions[i];\n\n            for (var j = 0; j < ship.length; j++) {\n              current_position.probability++;\n              current_position = current_position['s'];\n            }\n          }\n        }\n      }\n    }\n\n    for (var i = 0; i < 100; i++) {\n      if (playerState.positions[i].probability > 0) {\n        playerState.positions[i].probability += Math.random() * randomness;\n      }\n\n      if (playerState.positions[i].fired) {\n        if (playerState.positions[i].hit && !playerState.positions[i].sunk) {\n          for (var direction in directions) {\n            var hitStreak = 1;\n            var checked_position = playerState.positions[i];\n\n            while (checked_position[direction] && checked_position[direction].hit && !checked_position[direction].confirmed) {\n              hitStreak++;\n              checked_position = checked_position[direction];\n            }\n\n            checked_position = checked_position[direction];\n\n            if (checked_position && !checked_position.fired) {\n              checked_position.probability += hitStreak * 10;\n            }\n          }\n        }\n\n        playerState.positions[i].probability = -1;\n      }\n    }\n  }\n\n  calculateDensity(); // console.log(\"After re-cal \")\n  // console.table(playerState.positions)\n\n  var gameover = false; // ฟังก์ชั่นสุ่มเลขโดยรับค่า min max\n  // function getRandomInt(min, max) {\n  //     const minimum = Math.ceil(min);\n  //     const maximum = Math.floor(max);\n  //     return Math.floor(Math.random() * (maximum - minimum + 1)) + minimum;\n  // }\n  // ฟั่งชั่นที่ทำงานเมื่อผู้เล่นกดช่องตาราง \n\n  function play(e) {\n    var allDead = true; //เช็คว่ามีเรือรึเปล่า\n\n    checkShip(e); //เช็คว่าเกมจบรึยัง\n\n    for (var ship in playerState.ships) {\n      if (playerState.ships[ship].alive) {\n        allDead = false;\n      }\n    }\n\n    if (allDead) {\n      end();\n    }\n  } // ฟังก์ชั่นสุ่มสำหรับเซ็กว่าผู้เล่นยิงโดนเรือตรงข้ามหรือไม่\n\n\n  function checkShip(e) {\n    // ให้ตัวแปล clicked เก็บตำแหน่งที่ผู้เล่นกด\n    var clicked = [parseInt(e.target.id[0]), parseInt(e.target.id[2])]; // console.log(\"Clicked at \" + clicked)\n\n    var flag = false; // เช็คว่าเจอเรือไหม (เรือ: \"O\")\n\n    var check_cell = playerState.board[clicked[0] + 1][clicked[1] + 1];\n\n    if (!(check_cell === \"-\")) {\n      switch (check_cell) {\n        case 'B':\n          playerState.ships['battleship'].life--;\n\n          if (playerState.ships['battleship'].life === 0) {\n            playerState.ships['battleship'].alive = false;\n            console.log(playerState.name + \"'s Battleship is sunk!!\");\n          }\n\n          break;\n\n        case 'D':\n          playerState.ships['destroyer'].life--;\n\n          if (playerState.ships['destroyer'].life === 0) {\n            playerState.ships['destroyer'].alive = false;\n            console.log(playerState.name + \"'s Destroyer is sunk!!\");\n          }\n\n          break;\n\n        case 'A':\n          playerState.ships['aircraftcarrier'].life--;\n\n          if (playerState.ships['aircraftcarrier'].life === 0) {\n            playerState.ships['aircraftcarrier'].alive = false;\n            console.log(playerState.name + \"'s Aircraftcarrier is sunk!!\");\n          }\n\n          break;\n\n        case 'S':\n          playerState.ships['submarine'].life--;\n\n          if (playerState.ships['submarine'].life === 0) {\n            playerState.ships['submarine'].alive = false;\n            console.log(playerState.name + \"'s Submarine is sunk!!\");\n          }\n\n          break;\n\n        case 'P':\n          playerState.ships['patrolboat'].life--;\n\n          if (playerState.ships['patrolboat'].life === 0) {\n            playerState.ships['patrolboat'].alive = false;\n            console.log(playerState.name + \"'s Patrolboat is sunk!!\");\n          }\n\n          break;\n      }\n\n      console.log(\"Position at \" + playerState.positions[parseInt(e.target.id[0] + e.target.id[2])].index);\n      playerState.positions[parseInt(e.target.id[0] + e.target.id[2])].fired = true;\n      playerState.positions[parseInt(e.target.id[0] + e.target.id[2])].hit = true; // console.log('After hit')\n\n      e.target.src = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR9qcrQeLufxv61jZ194tG5CJvux0p4U4-r2g&usqp=CAU';\n      flag = true;\n    } else {\n      playerState.positions[parseInt(e.target.id[0] + e.target.id[2])].fired = true; // console.log('After fired ')\n\n      console.log(playerState.name + ': nothing here...');\n      e.target.src = 'https://tmsvalue.co.uk/wp-content/uploads/2017/03/Square-500x500-red.png';\n      flag = false;\n    } // console.table(playerState.positions)\n\n\n    calculateDensity();\n    var cells = document.getElementsByClassName(\"image2\");\n\n    for (var i = 0; i < 100; i++) {\n      cells[i].innerHTML = playerState.positions[i].probability;\n    }\n\n    return flag;\n  }\n\n  function end() {\n    console.log(playerState.name + 'Lose!!!');\n  }\n  /* ต้องลงได้ทั้ง 4 ทิศ ถึงจะผ่าน */\n  // function placeable(head, length) {\n  //     try {\n  //         for (let axis = 0; axis < 2; axis++) {\n  //             for (let i = head[axis] - (length - 1); i < head[axis] + (length - 1); i++) {\n  //                 let temp\n  //                 if (axis === 0)\n  //                     temp = playerState.board[i][head[1]]\n  //                 else\n  //                     temp = playerState.board[head[0]][i]\n  //                 if (temp === '-') {\n  //                     continue\n  //                 }\n  //                 else {\n  //                     /* ถ้าวางไม่ได้ ยกเลิกทันที */\n  //                     return false\n  //                 }\n  //             }\n  //         }\n  //         return true\n  //     } catch (TypeError) {\n  //         /* โค้ดไม่ได้แยกแยะเรื่องหลุดแมพ ทำให้ TypeError ถ้าเลือกขอบแมพแล้วขนาดยาวจนเกิน Board (เกิน Length array ของ board) ซึ่งถ้าเป็นแบบนี้มันลงไม่ได้อยู่แล้ว return false ไปเลย*/\n  //         return false\n  //     }\n  // }\n\n\n  function placeShips() {\n    var index,\n        row,\n        col,\n        orientation,\n        validPosition = false,\n        lastPosition;\n\n    for (var ship in playerState.ships) {\n      while (!validPosition) {\n        index = getRandomPosition();\n        row = Math.floor(index / 10) + 1;\n        col = index % 10 + 1;\n        orientation = Math.random() * 2 > 1 ? 'e' : 's';\n\n        if (tryShip(playerState.ships[ship], index, orientation, 'occupied')) {\n          validPosition = true;\n        }\n      }\n\n      playerState.ships[ship].orientation = orientation;\n      lastPosition = playerState.positions[index];\n\n      for (var i = 0; i < playerState.ships[ship].length; i++) {\n        switch (ship) {\n          case 'battleship':\n            if (playerState.ships[ship].orientation == 'e') {\n              playerState.board[row][col + i] = 'B';\n            } else if (playerState.ships[ship].orientation == 's') {\n              playerState.board[row + i][col] = 'B';\n            }\n\n            break;\n\n          case 'destroyer':\n            if (playerState.ships[ship].orientation == 'e') {\n              playerState.board[row][col + i] = 'D';\n            } else if (playerState.ships[ship].orientation == 's') {\n              playerState.board[row + i][col] = 'D';\n            }\n\n            break;\n\n          case 'aircraftcarrier':\n            if (playerState.ships[ship].orientation == 'e') {\n              playerState.board[row][col + i] = 'A';\n            } else if (playerState.ships[ship].orientation == 's') {\n              playerState.board[row + i][col] = 'A';\n            }\n\n            break;\n\n          case 'submarine':\n            if (playerState.ships[ship].orientation == 'e') {\n              playerState.board[row][col + i] = 'S';\n            } else if (playerState.ships[ship].orientation == 's') {\n              playerState.board[row + i][col] = 'S';\n            }\n\n            break;\n\n          case 'patrolboat':\n            if (playerState.ships[ship].orientation == 'e') {\n              playerState.board[row][col + i] = 'P';\n            } else if (playerState.ships[ship].orientation == 's') {\n              playerState.board[row + i][col] = 'P';\n            }\n\n            break;\n        }\n\n        lastPosition.occupied = true;\n        lastPosition = lastPosition[orientation];\n      }\n\n      playerState.ships[ship].position = index;\n      validPosition = false;\n    }\n  }\n\n  function getRandomPosition() {\n    return Math.floor(Math.random() * 100);\n  } // function generateShip(shipLength) {\n  //     let prow = []\n  //     let isPlaceable\n  //     do {\n  //         for (let axis = 0; axis < 2; axis++) {\n  //             prow[axis] = getRandomInt(0, 10)\n  //         }\n  //         isPlaceable = placeable(prow, shipLength)\n  //     } while (!isPlaceable)\n  //     playerState.board[prow[0]][prow[1]] = 'O'\n  //     /* วางเรือ แบบสุ่มทิศ */\n  //     switch (getRandomInt(1, 4)) {\n  //         case 1:\n  //             for (let i = prow[0]; i < prow[0] + shipLength; i++) {\n  //                 playerState.board[i][prow[1]] = 'O';\n  //             }\n  //             break;\n  //         case 2:\n  //             for (let i = prow[1]; i < prow[1] + shipLength; i++) {\n  //                 playerState.board[prow[0]][i] = 'O';\n  //             }\n  //             break;\n  //         case 3:\n  //             for (let i = prow[0] - (shipLength - 1); i < prow[0]; i++) {\n  //                 playerState.board[i][prow[1]] = 'O';\n  //             }\n  //             break;\n  //         case 4:\n  //             for (let i = prow[1] - (shipLength - 1); i < prow[1]; i++) {\n  //                 playerState.board[prow[0]][i] = 'O';\n  //             }\n  //             break;\n  //     }\n  // }\n  // function step() {\n  //     play()\n  //     calculateDensity()\n  // }\n\n\n  useEffect(() => {\n    // generateShip(2)\n    // generateShip(3)\n    // generateShip(3)\n    // generateShip(4)\n    // generateShip(5)\n    placeShips();\n    console.log(playerState.name + \" board: \");\n    console.log(playerState.board);\n    console.log(playerState.ships);\n  }, [setPlayerState]); // สร้างตารางโดยรับค่า id และ src\n\n  const createCell = (id, src) => {\n    // ถ้าเป็นแถวแรกให้สร้าง header ระบุเลขช่องด้วยนอกจากนั้นก็สร้างแค่ช่องปกติ\n    if (id[0] === 0) {\n      return /*#__PURE__*/_jsxDEV(\"th\", {\n        children: [id[1] + 1, /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"cell parent\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            class: \"image1\",\n            id: id,\n            src: src,\n            onClick: play\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"image2\",\n            children: [\" \", Math.floor(playerState.positions[id[1]].probability), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"cell parent\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        class: \"image1\",\n        id: id,\n        src: src,\n        onClick: play\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"image2\",\n        children: [\" \", Math.floor(playerState.positions[parseInt(id[0].toString()) + id[1].toString()].probability), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.player\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: Array.from({\n        length: 10\n      }).map((_, row) => {\n        var ascii = 65;\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: String.fromCharCode(ascii + row)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 29\n          }, this), Array.from({\n            length: 10\n          }).map((_, col) => {\n            var index = (10 - row - 1) * 10 + (10 - col);\n            var id = [row, col];\n            var src = 'map/' + index + '.jpg';\n            return createCell(id, src);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 447,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Table, \"KzrVYW86ABp7zLDQcs4XITTa6AA=\");\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/gurum/Documents/AI project/battleship/src/components/Table.js"],"names":["Container","Button","useEffect","useState","Table","props","randomness","positions","i","row","Math","floor","col","index","probability","occupied","fired","hit","sunk","w","e","n","s","player","Object","freeze","name","board","Array","from","founded","ships","alive","length","position","orientation","life","playerState","setPlayerState","tryShip","ship","direction","propertyToTest","check_position","flag","calculateDensity","current_position","directions","shipName","j","random","hitStreak","checked_position","confirmed","gameover","play","allDead","checkShip","end","clicked","parseInt","target","id","check_cell","console","log","src","cells","document","getElementsByClassName","innerHTML","placeShips","validPosition","lastPosition","getRandomPosition","createCell","toString","map","_","ascii","String","fromCharCode"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,iBAAlC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AAErB,QAAMC,UAAU,GAAG,CAAnB;AAEA,MAAIC,SAAS,GAAG,EAAhB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1B,QAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,CAAC,GAAG,EAAf,CAAV;AACA,QAAII,GAAG,GAAGJ,CAAC,GAAG,EAAd;AAEAD,IAAAA,SAAS,CAACC,CAAD,CAAT,GAAe;AACXK,MAAAA,KAAK,EAAEL,CADI;AAEXM,MAAAA,WAAW,EAAE,CAFF;AAGXC,MAAAA,QAAQ,EAAE,KAHC;AAIXC,MAAAA,KAAK,EAAE,KAJI;AAKXC,MAAAA,GAAG,EAAE,KALM;AAMXC,MAAAA,IAAI,EAAE,KANK;AAOXT,MAAAA,GAAG,EAAEA,GAPM;AAQXG,MAAAA,GAAG,EAAEA;AARM,KAAf;AAUH;;AAED,OAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1BD,IAAAA,SAAS,CAACC,CAAD,CAAT,CAAaW,CAAb,GAAkBZ,SAAS,CAACC,CAAC,GAAG,CAAL,CAAT,IAAoBD,SAAS,CAACC,CAAC,GAAG,CAAL,CAAT,CAAiBC,GAAjB,KAAyBF,SAAS,CAACC,CAAD,CAAT,CAAaC,GAA3D,GAAkEF,SAAS,CAACC,CAAC,GAAG,CAAL,CAA3E,GAAqF,IAAtG;AACAD,IAAAA,SAAS,CAACC,CAAD,CAAT,CAAaY,CAAb,GAAkBb,SAAS,CAACC,CAAC,GAAG,CAAL,CAAT,IAAoBD,SAAS,CAACC,CAAC,GAAG,CAAL,CAAT,CAAiBC,GAAjB,KAAyBF,SAAS,CAACC,CAAD,CAAT,CAAaC,GAA3D,GAAkEF,SAAS,CAACC,CAAC,GAAG,CAAL,CAA3E,GAAqF,IAAtG;AACAD,IAAAA,SAAS,CAACC,CAAD,CAAT,CAAaa,CAAb,GAAiBd,SAAS,CAACC,CAAC,GAAG,EAAL,CAAT,GAAoBD,SAAS,CAACC,CAAC,GAAG,EAAL,CAA7B,GAAwC,IAAzD;AACAD,IAAAA,SAAS,CAACC,CAAD,CAAT,CAAac,CAAb,GAAiBf,SAAS,CAACC,CAAC,GAAG,EAAL,CAAT,GAAoBD,SAAS,CAACC,CAAC,GAAG,EAAL,CAA7B,GAAwC,IAAzD;AACH,GA1BoB,CA4BrB;;;AACA,QAAMe,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc;AACzBC,IAAAA,IAAI,EAAErB,KAAK,CAACkB,MADa;AAEzBI,IAAAA,KAAK,EAAE,CACH,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,CADG,EAEH,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,CAFG,EAGH,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,CAHG,EAIH,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,CAJG,EAKH,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,CALG,EAMH,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,CANG,EAOH,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,CAPG,EAQH,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,CARG,EASH,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,CATG,EAUH,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,CAVG,EAWH,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,CAXG,EAYH,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,CAZG,CAFkB;AAgBzBpB,IAAAA,SAAS,EAAEqB,KAAK,CAACC,IAAN,CAAWtB,SAAX,CAhBc;AAiBzBuB,IAAAA,OAAO,EAAE,CAjBgB;AAkBzBC,IAAAA,KAAK,EAAE;AACH,oBAAc;AACVC,QAAAA,KAAK,EAAE,IADG;AAEVC,QAAAA,MAAM,EAAE,CAFE;AAGVC,QAAAA,QAAQ,EAAE,CAHA;AAIVC,QAAAA,WAAW,EAAE,UAJH;AAKVC,QAAAA,IAAI,EAAE;AALI,OADX;AAQH,mBAAa;AACTJ,QAAAA,KAAK,EAAE,IADE;AAETC,QAAAA,MAAM,EAAE,CAFC;AAGTC,QAAAA,QAAQ,EAAE,CAHD;AAITC,QAAAA,WAAW,EAAE,UAJJ;AAKTC,QAAAA,IAAI,EAAE;AALG,OARV;AAeH,yBAAmB;AACfJ,QAAAA,KAAK,EAAE,IADQ;AAEfC,QAAAA,MAAM,EAAE,CAFO;AAGfC,QAAAA,QAAQ,EAAE,CAHK;AAIfC,QAAAA,WAAW,EAAE,UAJE;AAKfC,QAAAA,IAAI,EAAE;AALS,OAfhB;AAsBH,mBAAa;AACTJ,QAAAA,KAAK,EAAE,IADE;AAETC,QAAAA,MAAM,EAAE,CAFC;AAGTC,QAAAA,QAAQ,EAAE,CAHD;AAITC,QAAAA,WAAW,EAAE,UAJJ;AAKTC,QAAAA,IAAI,EAAE;AALG,OAtBV;AA6BH,oBAAc;AACVJ,QAAAA,KAAK,EAAE,IADG;AAEVC,QAAAA,MAAM,EAAE,CAFE;AAGVC,QAAAA,QAAQ,EAAE,CAHA;AAIVC,QAAAA,WAAW,EAAE,UAJH;AAKVC,QAAAA,IAAI,EAAE;AALI;AA7BX;AAlBkB,GAAd,CAAf,CA7BqB,CAsFrB;;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCnC,QAAQ,CAACoB,MAAD,CAA9C;;AAEA,WAASgB,OAAT,CAAiBC,IAAjB,EAAuBN,QAAvB,EAAiCO,SAAjC,EAA4CC,cAA5C,EAA4D;AACxD,QAAIC,cAAc,GAAGN,WAAW,CAAC9B,SAAZ,CAAsB2B,QAAtB,CAArB;AACA,QAAIU,IAAI,GAAG,IAAX;;AAEA,SAAK,IAAIpC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIgC,IAAI,CAACP,MAA1B,EAAkCzB,CAAC,EAAnC,EAAuC;AACnC,UAAI,CAACmC,cAAD,IAAmBA,cAAc,CAACD,cAAD,CAArC,EAAuD;AACnDE,QAAAA,IAAI,GAAG,KAAP;AACA;AACH;;AACDD,MAAAA,cAAc,GAAGA,cAAc,CAACF,SAAD,CAA/B;AACH;;AAED,WAAOG,IAAP;AACH;;AAED,WAASC,gBAAT,GAA4B;AACxB,QAAIC,gBAAJ;AACA,QAAIC,UAAU,GAAG;AAAE,WAAK,IAAP;AAAa,WAAK,IAAlB;AAAwB,WAAK,IAA7B;AAAmC,WAAK;AAAxC,KAAjB;;AACA,SAAK,IAAIvC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1B6B,MAAAA,WAAW,CAAC9B,SAAZ,CAAsBC,CAAtB,EAAyBM,WAAzB,GAAuC,CAAvC;AACH;;AACD,SAAK,IAAIkC,QAAT,IAAqBX,WAAW,CAACN,KAAjC,EAAwC;AACpC,UAAIS,IAAI,GAAGH,WAAW,CAACN,KAAZ,CAAkBiB,QAAlB,CAAX;;AACA,UAAIR,IAAI,CAACR,KAAT,EAAgB;AACZ,aAAK,IAAIxB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1B,cAAI+B,OAAO,CAACC,IAAD,EAAOhC,CAAP,EAAU,GAAV,CAAX,EAA2B;AACvBsC,YAAAA,gBAAgB,GAAGT,WAAW,CAAC9B,SAAZ,CAAsBC,CAAtB,CAAnB;;AACA,iBAAK,IAAIyC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,IAAI,CAACP,MAAzB,EAAiCgB,CAAC,EAAlC,EAAsC;AAClCH,cAAAA,gBAAgB,CAAChC,WAAjB;AACAgC,cAAAA,gBAAgB,GAAGA,gBAAgB,CAAC,GAAD,CAAnC;AACH;AACJ;;AACD,cAAIP,OAAO,CAACC,IAAD,EAAOhC,CAAP,EAAU,GAAV,CAAX,EAA2B;AACvBsC,YAAAA,gBAAgB,GAAGT,WAAW,CAAC9B,SAAZ,CAAsBC,CAAtB,CAAnB;;AACA,iBAAK,IAAIyC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,IAAI,CAACP,MAAzB,EAAiCgB,CAAC,EAAlC,EAAsC;AAClCH,cAAAA,gBAAgB,CAAChC,WAAjB;AACAgC,cAAAA,gBAAgB,GAAGA,gBAAgB,CAAC,GAAD,CAAnC;AACH;AACJ;AACJ;AACJ;AACJ;;AAED,SAAK,IAAItC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1B,UAAI6B,WAAW,CAAC9B,SAAZ,CAAsBC,CAAtB,EAAyBM,WAAzB,GAAuC,CAA3C,EAA8C;AAC1CuB,QAAAA,WAAW,CAAC9B,SAAZ,CAAsBC,CAAtB,EAAyBM,WAAzB,IAAwCJ,IAAI,CAACwC,MAAL,KAAgB5C,UAAxD;AACH;;AAED,UAAI+B,WAAW,CAAC9B,SAAZ,CAAsBC,CAAtB,EAAyBQ,KAA7B,EAAoC;AAChC,YAAIqB,WAAW,CAAC9B,SAAZ,CAAsBC,CAAtB,EAAyBS,GAAzB,IAAgC,CAACoB,WAAW,CAAC9B,SAAZ,CAAsBC,CAAtB,EAAyBU,IAA9D,EAAoE;AAChE,eAAK,IAAIuB,SAAT,IAAsBM,UAAtB,EAAkC;AAC9B,gBAAII,SAAS,GAAG,CAAhB;AACA,gBAAIC,gBAAgB,GAAGf,WAAW,CAAC9B,SAAZ,CAAsBC,CAAtB,CAAvB;;AACA,mBAAO4C,gBAAgB,CAACX,SAAD,CAAhB,IAA+BW,gBAAgB,CAACX,SAAD,CAAhB,CAA4BxB,GAA3D,IAAkE,CAACmC,gBAAgB,CAACX,SAAD,CAAhB,CAA4BY,SAAtG,EAAiH;AAC7GF,cAAAA,SAAS;AACTC,cAAAA,gBAAgB,GAAGA,gBAAgB,CAACX,SAAD,CAAnC;AACH;;AACDW,YAAAA,gBAAgB,GAAGA,gBAAgB,CAACX,SAAD,CAAnC;;AACA,gBAAIW,gBAAgB,IAAI,CAACA,gBAAgB,CAACpC,KAA1C,EAAiD;AAC7CoC,cAAAA,gBAAgB,CAACtC,WAAjB,IAAgCqC,SAAS,GAAG,EAA5C;AACH;AACJ;AACJ;;AACDd,QAAAA,WAAW,CAAC9B,SAAZ,CAAsBC,CAAtB,EAAyBM,WAAzB,GAAuC,CAAC,CAAxC;AACH;AACJ;AACJ;;AAED+B,EAAAA,gBAAgB,GA7JK,CA+JrB;AACA;;AAEA,MAAIS,QAAQ,GAAG,KAAf,CAlKqB,CAoKrB;AACA;AACA;AACA;AAEA;AACA;AAEA;;AACA,WAASC,IAAT,CAAcnC,CAAd,EAAiB;AACb,QAAIoC,OAAO,GAAG,IAAd,CADa,CAGb;;AACAC,IAAAA,SAAS,CAACrC,CAAD,CAAT,CAJa,CAMb;;AACA,SAAI,IAAIoB,IAAR,IAAgBH,WAAW,CAACN,KAA5B,EAAkC;AAC9B,UAAGM,WAAW,CAACN,KAAZ,CAAkBS,IAAlB,EAAwBR,KAA3B,EAAiC;AAC7BwB,QAAAA,OAAO,GAAG,KAAV;AACH;AACJ;;AAED,QAAGA,OAAH,EAAW;AACPE,MAAAA,GAAG;AACN;AAEJ,GA9LoB,CAgMrB;;;AACA,WAASD,SAAT,CAAmBrC,CAAnB,EAAsB;AAClB;AACA,QAAIuC,OAAO,GAAG,CAACC,QAAQ,CAACxC,CAAC,CAACyC,MAAF,CAASC,EAAT,CAAY,CAAZ,CAAD,CAAT,EAA2BF,QAAQ,CAACxC,CAAC,CAACyC,MAAF,CAASC,EAAT,CAAY,CAAZ,CAAD,CAAnC,CAAd,CAFkB,CAGlB;;AACA,QAAIlB,IAAI,GAAG,KAAX,CAJkB,CAKlB;;AACA,QAAImB,UAAU,GAAG1B,WAAW,CAACV,KAAZ,CAAkBgC,OAAO,CAAC,CAAD,CAAP,GAAa,CAA/B,EAAkCA,OAAO,CAAC,CAAD,CAAP,GAAa,CAA/C,CAAjB;;AACA,QAAI,EAAEI,UAAU,KAAK,GAAjB,CAAJ,EAA2B;AACvB,cAAQA,UAAR;AACI,aAAK,GAAL;AACI1B,UAAAA,WAAW,CAACN,KAAZ,CAAkB,YAAlB,EAAgCK,IAAhC;;AACA,cAAGC,WAAW,CAACN,KAAZ,CAAkB,YAAlB,EAAgCK,IAAhC,KAAyC,CAA5C,EAA+C;AAC3CC,YAAAA,WAAW,CAACN,KAAZ,CAAkB,YAAlB,EAAgCC,KAAhC,GAAwC,KAAxC;AACAgC,YAAAA,OAAO,CAACC,GAAR,CAAY5B,WAAW,CAACX,IAAZ,GAAmB,yBAA/B;AACH;;AACD;;AACJ,aAAK,GAAL;AACIW,UAAAA,WAAW,CAACN,KAAZ,CAAkB,WAAlB,EAA+BK,IAA/B;;AACA,cAAGC,WAAW,CAACN,KAAZ,CAAkB,WAAlB,EAA+BK,IAA/B,KAAwC,CAA3C,EAA8C;AAC1CC,YAAAA,WAAW,CAACN,KAAZ,CAAkB,WAAlB,EAA+BC,KAA/B,GAAuC,KAAvC;AACAgC,YAAAA,OAAO,CAACC,GAAR,CAAY5B,WAAW,CAACX,IAAZ,GAAmB,wBAA/B;AACH;;AACD;;AACJ,aAAK,GAAL;AACIW,UAAAA,WAAW,CAACN,KAAZ,CAAkB,iBAAlB,EAAqCK,IAArC;;AACA,cAAGC,WAAW,CAACN,KAAZ,CAAkB,iBAAlB,EAAqCK,IAArC,KAA8C,CAAjD,EAAoD;AAChDC,YAAAA,WAAW,CAACN,KAAZ,CAAkB,iBAAlB,EAAqCC,KAArC,GAA6C,KAA7C;AACAgC,YAAAA,OAAO,CAACC,GAAR,CAAY5B,WAAW,CAACX,IAAZ,GAAmB,8BAA/B;AACH;;AACD;;AACJ,aAAK,GAAL;AACIW,UAAAA,WAAW,CAACN,KAAZ,CAAkB,WAAlB,EAA+BK,IAA/B;;AACA,cAAGC,WAAW,CAACN,KAAZ,CAAkB,WAAlB,EAA+BK,IAA/B,KAAwC,CAA3C,EAA8C;AAC1CC,YAAAA,WAAW,CAACN,KAAZ,CAAkB,WAAlB,EAA+BC,KAA/B,GAAuC,KAAvC;AACAgC,YAAAA,OAAO,CAACC,GAAR,CAAY5B,WAAW,CAACX,IAAZ,GAAmB,wBAA/B;AACH;;AACD;;AACJ,aAAK,GAAL;AACIW,UAAAA,WAAW,CAACN,KAAZ,CAAkB,YAAlB,EAAgCK,IAAhC;;AACA,cAAGC,WAAW,CAACN,KAAZ,CAAkB,YAAlB,EAAgCK,IAAhC,KAAyC,CAA5C,EAA+C;AAC3CC,YAAAA,WAAW,CAACN,KAAZ,CAAkB,YAAlB,EAAgCC,KAAhC,GAAwC,KAAxC;AACAgC,YAAAA,OAAO,CAACC,GAAR,CAAY5B,WAAW,CAACX,IAAZ,GAAmB,yBAA/B;AACH;;AACD;AAnCR;;AAqCAsC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiB5B,WAAW,CAAC9B,SAAZ,CAAsBqD,QAAQ,CAACxC,CAAC,CAACyC,MAAF,CAASC,EAAT,CAAY,CAAZ,IAAiB1C,CAAC,CAACyC,MAAF,CAASC,EAAT,CAAY,CAAZ,CAAlB,CAA9B,EAAiEjD,KAA9F;AACAwB,MAAAA,WAAW,CAAC9B,SAAZ,CAAsBqD,QAAQ,CAACxC,CAAC,CAACyC,MAAF,CAASC,EAAT,CAAY,CAAZ,IAAiB1C,CAAC,CAACyC,MAAF,CAASC,EAAT,CAAY,CAAZ,CAAlB,CAA9B,EAAiE9C,KAAjE,GAAyE,IAAzE;AACAqB,MAAAA,WAAW,CAAC9B,SAAZ,CAAsBqD,QAAQ,CAACxC,CAAC,CAACyC,MAAF,CAASC,EAAT,CAAY,CAAZ,IAAiB1C,CAAC,CAACyC,MAAF,CAASC,EAAT,CAAY,CAAZ,CAAlB,CAA9B,EAAiE7C,GAAjE,GAAuE,IAAvE,CAxCuB,CAyCvB;;AACAG,MAAAA,CAAC,CAACyC,MAAF,CAASK,GAAT,GAAe,qGAAf;AACAtB,MAAAA,IAAI,GAAG,IAAP;AACH,KA5CD,MA4CO;AACHP,MAAAA,WAAW,CAAC9B,SAAZ,CAAsBqD,QAAQ,CAACxC,CAAC,CAACyC,MAAF,CAASC,EAAT,CAAY,CAAZ,IAAiB1C,CAAC,CAACyC,MAAF,CAASC,EAAT,CAAY,CAAZ,CAAlB,CAA9B,EAAiE9C,KAAjE,GAAyE,IAAzE,CADG,CAEH;;AACAgD,MAAAA,OAAO,CAACC,GAAR,CAAY5B,WAAW,CAACX,IAAZ,GAAmB,mBAA/B;AACAN,MAAAA,CAAC,CAACyC,MAAF,CAASK,GAAT,GAAe,0EAAf;AACAtB,MAAAA,IAAI,GAAI,KAAR;AACH,KAzDiB,CA2DlB;;;AACAC,IAAAA,gBAAgB;AAChB,QAAIsB,KAAK,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,QAAhC,CAAZ;;AACA,SAAK,IAAI7D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1B2D,MAAAA,KAAK,CAAC3D,CAAD,CAAL,CAAS8D,SAAT,GAAqBjC,WAAW,CAAC9B,SAAZ,CAAsBC,CAAtB,EAAyBM,WAA9C;AACH;;AAED,WAAO8B,IAAP;AACH;;AAED,WAASc,GAAT,GAAe;AACXM,IAAAA,OAAO,CAACC,GAAR,CAAY5B,WAAW,CAACX,IAAZ,GAAmB,SAA/B;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;AAEA,WAAS6C,UAAT,GAAsB;AAClB,QAAI1D,KAAJ;AAAA,QAAWJ,GAAX;AAAA,QAAgBG,GAAhB;AAAA,QAAqBuB,WAArB;AAAA,QAAkCqC,aAAa,GAAG,KAAlD;AAAA,QAAyDC,YAAzD;;AACA,SAAK,IAAIjC,IAAT,IAAiBH,WAAW,CAACN,KAA7B,EAAoC;AAChC,aAAO,CAACyC,aAAR,EAAuB;AACnB3D,QAAAA,KAAK,GAAG6D,iBAAiB,EAAzB;AACAjE,QAAAA,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWE,KAAK,GAAG,EAAnB,IAAyB,CAA/B;AACAD,QAAAA,GAAG,GAAIC,KAAK,GAAG,EAAT,GAAe,CAArB;AACAsB,QAAAA,WAAW,GAAIzB,IAAI,CAACwC,MAAL,KAAgB,CAAhB,GAAoB,CAArB,GAA0B,GAA1B,GAAgC,GAA9C;;AACA,YAAIX,OAAO,CAACF,WAAW,CAACN,KAAZ,CAAkBS,IAAlB,CAAD,EAA0B3B,KAA1B,EAAiCsB,WAAjC,EAA8C,UAA9C,CAAX,EAAsE;AAClEqC,UAAAA,aAAa,GAAG,IAAhB;AACH;AACJ;;AACDnC,MAAAA,WAAW,CAACN,KAAZ,CAAkBS,IAAlB,EAAwBL,WAAxB,GAAsCA,WAAtC;AACAsC,MAAAA,YAAY,GAAGpC,WAAW,CAAC9B,SAAZ,CAAsBM,KAAtB,CAAf;;AACA,WAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6B,WAAW,CAACN,KAAZ,CAAkBS,IAAlB,EAAwBP,MAA5C,EAAoDzB,CAAC,EAArD,EAAyD;AACrD,gBAAQgC,IAAR;AACI,eAAK,YAAL;AACI,gBAAIH,WAAW,CAACN,KAAZ,CAAkBS,IAAlB,EAAwBL,WAAxB,IAAuC,GAA3C,EAAgD;AAC5CE,cAAAA,WAAW,CAACV,KAAZ,CAAkBlB,GAAlB,EAAuBG,GAAG,GAAGJ,CAA7B,IAAkC,GAAlC;AACH,aAFD,MAGK,IAAI6B,WAAW,CAACN,KAAZ,CAAkBS,IAAlB,EAAwBL,WAAxB,IAAuC,GAA3C,EAAgD;AACjDE,cAAAA,WAAW,CAACV,KAAZ,CAAkBlB,GAAG,GAAGD,CAAxB,EAA2BI,GAA3B,IAAkC,GAAlC;AACH;;AACD;;AACJ,eAAK,WAAL;AACI,gBAAIyB,WAAW,CAACN,KAAZ,CAAkBS,IAAlB,EAAwBL,WAAxB,IAAuC,GAA3C,EAAgD;AAC5CE,cAAAA,WAAW,CAACV,KAAZ,CAAkBlB,GAAlB,EAAuBG,GAAG,GAAGJ,CAA7B,IAAkC,GAAlC;AACH,aAFD,MAGK,IAAI6B,WAAW,CAACN,KAAZ,CAAkBS,IAAlB,EAAwBL,WAAxB,IAAuC,GAA3C,EAAgD;AACjDE,cAAAA,WAAW,CAACV,KAAZ,CAAkBlB,GAAG,GAAGD,CAAxB,EAA2BI,GAA3B,IAAkC,GAAlC;AACH;;AACD;;AACJ,eAAK,iBAAL;AACI,gBAAIyB,WAAW,CAACN,KAAZ,CAAkBS,IAAlB,EAAwBL,WAAxB,IAAuC,GAA3C,EAAgD;AAC5CE,cAAAA,WAAW,CAACV,KAAZ,CAAkBlB,GAAlB,EAAuBG,GAAG,GAAGJ,CAA7B,IAAkC,GAAlC;AACH,aAFD,MAGK,IAAI6B,WAAW,CAACN,KAAZ,CAAkBS,IAAlB,EAAwBL,WAAxB,IAAuC,GAA3C,EAAgD;AACjDE,cAAAA,WAAW,CAACV,KAAZ,CAAkBlB,GAAG,GAAGD,CAAxB,EAA2BI,GAA3B,IAAkC,GAAlC;AACH;;AACD;;AACJ,eAAK,WAAL;AACI,gBAAIyB,WAAW,CAACN,KAAZ,CAAkBS,IAAlB,EAAwBL,WAAxB,IAAuC,GAA3C,EAAgD;AAC5CE,cAAAA,WAAW,CAACV,KAAZ,CAAkBlB,GAAlB,EAAuBG,GAAG,GAAGJ,CAA7B,IAAkC,GAAlC;AACH,aAFD,MAGK,IAAI6B,WAAW,CAACN,KAAZ,CAAkBS,IAAlB,EAAwBL,WAAxB,IAAuC,GAA3C,EAAgD;AACjDE,cAAAA,WAAW,CAACV,KAAZ,CAAkBlB,GAAG,GAAGD,CAAxB,EAA2BI,GAA3B,IAAkC,GAAlC;AACH;;AACD;;AACJ,eAAK,YAAL;AACI,gBAAIyB,WAAW,CAACN,KAAZ,CAAkBS,IAAlB,EAAwBL,WAAxB,IAAuC,GAA3C,EAAgD;AAC5CE,cAAAA,WAAW,CAACV,KAAZ,CAAkBlB,GAAlB,EAAuBG,GAAG,GAAGJ,CAA7B,IAAkC,GAAlC;AACH,aAFD,MAGK,IAAI6B,WAAW,CAACN,KAAZ,CAAkBS,IAAlB,EAAwBL,WAAxB,IAAuC,GAA3C,EAAgD;AACjDE,cAAAA,WAAW,CAACV,KAAZ,CAAkBlB,GAAG,GAAGD,CAAxB,EAA2BI,GAA3B,IAAkC,GAAlC;AACH;;AACD;AAxCR;;AA0CA6D,QAAAA,YAAY,CAAC1D,QAAb,GAAwB,IAAxB;AACA0D,QAAAA,YAAY,GAAGA,YAAY,CAACtC,WAAD,CAA3B;AACH;;AACDE,MAAAA,WAAW,CAACN,KAAZ,CAAkBS,IAAlB,EAAwBN,QAAxB,GAAmCrB,KAAnC;AACA2D,MAAAA,aAAa,GAAG,KAAhB;AACH;AACJ;;AAED,WAASE,iBAAT,GAA6B;AACzB,WAAOhE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACwC,MAAL,KAAgB,GAA3B,CAAP;AACH,GA3WoB,CA6WrB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEAhD,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA;AACA;AACA;AACA;AACAqE,IAAAA,UAAU;AACVP,IAAAA,OAAO,CAACC,GAAR,CAAY5B,WAAW,CAACX,IAAZ,GAAmB,UAA/B;AACAsC,IAAAA,OAAO,CAACC,GAAR,CAAY5B,WAAW,CAACV,KAAxB;AACAqC,IAAAA,OAAO,CAACC,GAAR,CAAY5B,WAAW,CAACN,KAAxB;AACH,GAVQ,EAUN,CAACO,cAAD,CAVM,CAAT,CAvZqB,CAmarB;;AACA,QAAMqC,UAAU,GAAG,CAACb,EAAD,EAAKI,GAAL,KAAa;AAE5B;AACA,QAAIJ,EAAE,CAAC,CAAD,CAAF,KAAU,CAAd,EAAiB;AACb,0BACI;AAAA,mBACKA,EAAE,CAAC,CAAD,CAAF,GAAQ,CADb,eAEI;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA,kCACI;AAAK,YAAA,KAAK,EAAC,QAAX;AAAoB,YAAA,EAAE,EAAEA,EAAxB;AAA4B,YAAA,GAAG,EAAEI,GAAjC;AAAsC,YAAA,OAAO,EAAEX;AAA/C;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,KAAK,EAAC,QAAX;AAAA,4BAAsB7C,IAAI,CAACC,KAAL,CAAW0B,WAAW,CAAC9B,SAAZ,CAAsBuD,EAAE,CAAC,CAAD,CAAxB,EAA6BhD,WAAxC,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AASH;;AACD,wBACI;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA,8BACI;AAAK,QAAA,KAAK,EAAC,QAAX;AAAoB,QAAA,EAAE,EAAEgD,EAAxB;AAA4B,QAAA,GAAG,EAAEI,GAAjC;AAAsC,QAAA,OAAO,EAAEX;AAA/C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA,wBAAsB7C,IAAI,CAACC,KAAL,CAAW0B,WAAW,CAAC9B,SAAZ,CAAuBqD,QAAQ,CAACE,EAAE,CAAC,CAAD,CAAF,CAAMc,QAAN,EAAD,CAAR,GAA8Bd,EAAE,CAAC,CAAD,CAAF,CAAMc,QAAN,EAArD,EAAyE9D,WAApF,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH,GApBD;;AAsBA,sBACI,QAAC,SAAD;AAAA,4BACI;AAAA,gBAAKT,KAAK,CAACkB;AAAX;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAEKK,KAAK,CAACC,IAAN,CAAW;AAAEI,QAAAA,MAAM,EAAE;AAAV,OAAX,EAA2B4C,GAA3B,CAA+B,CAACC,CAAD,EAAIrE,GAAJ,KAAY;AAExC,YAAIsE,KAAK,GAAG,EAAZ;AACA,4BACI;AAAA,kCACI;AAAA,sBACKC,MAAM,CAACC,YAAP,CAAoBF,KAAK,GAAGtE,GAA5B;AADL;AAAA;AAAA;AAAA;AAAA,kBADJ,EAIKmB,KAAK,CAACC,IAAN,CAAW;AAAEI,YAAAA,MAAM,EAAE;AAAV,WAAX,EAA2B4C,GAA3B,CAA+B,CAACC,CAAD,EAAIlE,GAAJ,KAAY;AACxC,gBAAIC,KAAK,GAAI,CAAC,KAAKJ,GAAL,GAAW,CAAZ,IAAiB,EAAlB,IAAyB,KAAKG,GAA9B,CAAZ;AACA,gBAAIkD,EAAE,GAAG,CAACrD,GAAD,EAAMG,GAAN,CAAT;AACA,gBAAIsD,GAAG,GAAG,SAASrD,KAAT,GAAiB,MAA3B;AACA,mBACI8D,UAAU,CAACb,EAAD,EAAKI,GAAL,CADd;AAIH,WARA,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAgBH,OAnBA;AAFL;AAAA;AAAA;AAAA;AAAA,YAFJ,eAyBI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CAvdD;;GAAM9D,K;;KAAAA,K;AAydN,eAAeA,KAAf","sourcesContent":["import { Container, Button } from 'react-bootstrap'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst Table = (props) => {\r\n\r\n    const randomness = 3\r\n\r\n    var positions = []\r\n    for (var i = 0; i < 100; i++) {\r\n        var row = Math.floor(i / 10)\r\n        var col = i % 10\r\n\r\n        positions[i] = {\r\n            index: i,\r\n            probability: 0,\r\n            occupied: false,\r\n            fired: false,\r\n            hit: false,\r\n            sunk: false,\r\n            row: row,\r\n            col: col\r\n        }\r\n    }\r\n\r\n    for (var i = 0; i < 100; i++) {\r\n        positions[i].w = (positions[i - 1] && positions[i - 1].row === positions[i].row) ? positions[i - 1] : null;\r\n        positions[i].e = (positions[i + 1] && positions[i + 1].row === positions[i].row) ? positions[i + 1] : null;\r\n        positions[i].n = positions[i - 10] ? positions[i - 10] : null;\r\n        positions[i].s = positions[i + 10] ? positions[i + 10] : null;\r\n    }\r\n\r\n    //สร้างรูปแบบ state ของ player\r\n    const player = Object.freeze({\r\n        name: props.player,\r\n        board: [\r\n            ['X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X']\r\n        ],\r\n        positions: Array.from(positions),\r\n        founded: 0,\r\n        ships: {\r\n            'battleship': {\r\n                alive: true,\r\n                length: 4,\r\n                position: 0,\r\n                orientation: 'vertical',\r\n                life: 4\r\n            },\r\n            'destroyer': {\r\n                alive: true,\r\n                length: 3,\r\n                position: 0,\r\n                orientation: 'vertical',\r\n                life: 3\r\n            },\r\n            'aircraftcarrier': {\r\n                alive: true,\r\n                length: 5,\r\n                position: 0,\r\n                orientation: 'vertical',\r\n                life: 5\r\n            },\r\n            'submarine': {\r\n                alive: true,\r\n                length: 3,\r\n                position: 0,\r\n                orientation: 'vertical',\r\n                life: 3\r\n            },\r\n            'patrolboat': {\r\n                alive: true,\r\n                length: 2,\r\n                position: 0,\r\n                orientation: 'vertical',\r\n                life: 2\r\n            },\r\n        }\r\n    })\r\n\r\n    //สร้าง plyer state โดยใช้รูปแบบ player\r\n    const [playerState, setPlayerState] = useState(player)\r\n\r\n    function tryShip(ship, position, direction, propertyToTest) {\r\n        var check_position = playerState.positions[position]\r\n        var flag = true\r\n\r\n        for (var i = 1; i <= ship.length; i++) {\r\n            if (!check_position || check_position[propertyToTest]) {\r\n                flag = false;\r\n                break;\r\n            }\r\n            check_position = check_position[direction]\r\n        }\r\n\r\n        return flag\r\n    }\r\n\r\n    function calculateDensity() {\r\n        var current_position\r\n        var directions = { 'w': null, 'n': null, 'e': null, 's': null };\r\n        for (var i = 0; i < 100; i++) {\r\n            playerState.positions[i].probability = 0\r\n        }\r\n        for (var shipName in playerState.ships) {\r\n            var ship = playerState.ships[shipName]\r\n            if (ship.alive) {\r\n                for (var i = 0; i < 100; i++) {\r\n                    if (tryShip(ship, i, 'e')) {\r\n                        current_position = playerState.positions[i]\r\n                        for (var j = 0; j < ship.length; j++) {\r\n                            current_position.probability++\r\n                            current_position = current_position['e']\r\n                        }\r\n                    }\r\n                    if (tryShip(ship, i, 's')) {\r\n                        current_position = playerState.positions[i]\r\n                        for (var j = 0; j < ship.length; j++) {\r\n                            current_position.probability++\r\n                            current_position = current_position['s']\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (var i = 0; i < 100; i++) {\r\n            if (playerState.positions[i].probability > 0) {\r\n                playerState.positions[i].probability += Math.random() * randomness\r\n            }\r\n\r\n            if (playerState.positions[i].fired) {\r\n                if (playerState.positions[i].hit && !playerState.positions[i].sunk) {\r\n                    for (var direction in directions) {\r\n                        var hitStreak = 1\r\n                        var checked_position = playerState.positions[i]\r\n                        while (checked_position[direction] && checked_position[direction].hit && !checked_position[direction].confirmed) {\r\n                            hitStreak++\r\n                            checked_position = checked_position[direction]\r\n                        }\r\n                        checked_position = checked_position[direction]\r\n                        if (checked_position && !checked_position.fired) {\r\n                            checked_position.probability += hitStreak * 10\r\n                        }\r\n                    }\r\n                }\r\n                playerState.positions[i].probability = -1\r\n            }\r\n        }\r\n    }\r\n\r\n    calculateDensity()\r\n\r\n    // console.log(\"After re-cal \")\r\n    // console.table(playerState.positions)\r\n\r\n    var gameover = false\r\n\r\n    // ฟังก์ชั่นสุ่มเลขโดยรับค่า min max\r\n    // function getRandomInt(min, max) {\r\n    //     const minimum = Math.ceil(min);\r\n    //     const maximum = Math.floor(max);\r\n\r\n    //     return Math.floor(Math.random() * (maximum - minimum + 1)) + minimum;\r\n    // }\r\n\r\n    // ฟั่งชั่นที่ทำงานเมื่อผู้เล่นกดช่องตาราง \r\n    function play(e) {\r\n        var allDead = true\r\n\r\n        //เช็คว่ามีเรือรึเปล่า\r\n        checkShip(e)\r\n\r\n        //เช็คว่าเกมจบรึยัง\r\n        for(var ship in playerState.ships){\r\n            if(playerState.ships[ship].alive){\r\n                allDead = false\r\n            }\r\n        }\r\n\r\n        if(allDead){\r\n            end()\r\n        }\r\n        \r\n    }\r\n\r\n    // ฟังก์ชั่นสุ่มสำหรับเซ็กว่าผู้เล่นยิงโดนเรือตรงข้ามหรือไม่\r\n    function checkShip(e) {\r\n        // ให้ตัวแปล clicked เก็บตำแหน่งที่ผู้เล่นกด\r\n        var clicked = [parseInt(e.target.id[0]), parseInt(e.target.id[2])]\r\n        // console.log(\"Clicked at \" + clicked)\r\n        var flag = false\r\n        // เช็คว่าเจอเรือไหม (เรือ: \"O\")\r\n        var check_cell = playerState.board[clicked[0] + 1][clicked[1] + 1]\r\n        if (!(check_cell === \"-\")) {\r\n            switch (check_cell) {\r\n                case 'B':\r\n                    playerState.ships['battleship'].life--\r\n                    if(playerState.ships['battleship'].life === 0) {\r\n                        playerState.ships['battleship'].alive = false\r\n                        console.log(playerState.name + \"'s Battleship is sunk!!\")\r\n                    }\r\n                    break\r\n                case 'D':\r\n                    playerState.ships['destroyer'].life--\r\n                    if(playerState.ships['destroyer'].life === 0) {\r\n                        playerState.ships['destroyer'].alive = false\r\n                        console.log(playerState.name + \"'s Destroyer is sunk!!\")\r\n                    }\r\n                    break\r\n                case 'A':\r\n                    playerState.ships['aircraftcarrier'].life--\r\n                    if(playerState.ships['aircraftcarrier'].life === 0) {\r\n                        playerState.ships['aircraftcarrier'].alive = false\r\n                        console.log(playerState.name + \"'s Aircraftcarrier is sunk!!\")\r\n                    }\r\n                    break\r\n                case 'S':\r\n                    playerState.ships['submarine'].life--\r\n                    if(playerState.ships['submarine'].life === 0) {\r\n                        playerState.ships['submarine'].alive = false\r\n                        console.log(playerState.name + \"'s Submarine is sunk!!\")\r\n                    }\r\n                    break\r\n                case 'P':\r\n                    playerState.ships['patrolboat'].life--\r\n                    if(playerState.ships['patrolboat'].life === 0) {\r\n                        playerState.ships['patrolboat'].alive = false\r\n                        console.log(playerState.name + \"'s Patrolboat is sunk!!\")\r\n                    }\r\n                    break\r\n            }\r\n            console.log(\"Position at \" + playerState.positions[parseInt(e.target.id[0] + e.target.id[2])].index)\r\n            playerState.positions[parseInt(e.target.id[0] + e.target.id[2])].fired = true\r\n            playerState.positions[parseInt(e.target.id[0] + e.target.id[2])].hit = true\r\n            // console.log('After hit')\r\n            e.target.src = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR9qcrQeLufxv61jZ194tG5CJvux0p4U4-r2g&usqp=CAU'\r\n            flag = true\r\n        } else {\r\n            playerState.positions[parseInt(e.target.id[0] + e.target.id[2])].fired = true\r\n            // console.log('After fired ')\r\n            console.log(playerState.name + ': nothing here...')\r\n            e.target.src = 'https://tmsvalue.co.uk/wp-content/uploads/2017/03/Square-500x500-red.png'\r\n            flag =  false\r\n        }\r\n\r\n        // console.table(playerState.positions)\r\n        calculateDensity()\r\n        var cells = document.getElementsByClassName(\"image2\")\r\n        for (var i = 0; i < 100; i++) {\r\n            cells[i].innerHTML = playerState.positions[i].probability\r\n        }\r\n\r\n        return flag\r\n    }\r\n\r\n    function end() {\r\n        console.log(playerState.name + 'Lose!!!')\r\n    }\r\n\r\n    /* ต้องลงได้ทั้ง 4 ทิศ ถึงจะผ่าน */\r\n    // function placeable(head, length) {\r\n    //     try {\r\n    //         for (let axis = 0; axis < 2; axis++) {\r\n    //             for (let i = head[axis] - (length - 1); i < head[axis] + (length - 1); i++) {\r\n    //                 let temp\r\n\r\n    //                 if (axis === 0)\r\n    //                     temp = playerState.board[i][head[1]]\r\n    //                 else\r\n    //                     temp = playerState.board[head[0]][i]\r\n\r\n    //                 if (temp === '-') {\r\n    //                     continue\r\n    //                 }\r\n    //                 else {\r\n    //                     /* ถ้าวางไม่ได้ ยกเลิกทันที */\r\n    //                     return false\r\n    //                 }\r\n    //             }\r\n    //         }\r\n\r\n    //         return true\r\n\r\n    //     } catch (TypeError) {\r\n    //         /* โค้ดไม่ได้แยกแยะเรื่องหลุดแมพ ทำให้ TypeError ถ้าเลือกขอบแมพแล้วขนาดยาวจนเกิน Board (เกิน Length array ของ board) ซึ่งถ้าเป็นแบบนี้มันลงไม่ได้อยู่แล้ว return false ไปเลย*/\r\n    //         return false\r\n    //     }\r\n    // }\r\n\r\n    function placeShips() {\r\n        var index, row, col, orientation, validPosition = false, lastPosition;\r\n        for (var ship in playerState.ships) {\r\n            while (!validPosition) {\r\n                index = getRandomPosition();\r\n                row = Math.floor(index / 10) + 1\r\n                col = (index % 10) + 1\r\n                orientation = (Math.random() * 2 > 1) ? 'e' : 's';\r\n                if (tryShip(playerState.ships[ship], index, orientation, 'occupied')) {\r\n                    validPosition = true;\r\n                }\r\n            }\r\n            playerState.ships[ship].orientation = orientation\r\n            lastPosition = playerState.positions[index];\r\n            for (var i = 0; i < playerState.ships[ship].length; i++) {\r\n                switch (ship) {\r\n                    case 'battleship':\r\n                        if (playerState.ships[ship].orientation == 'e') {\r\n                            playerState.board[row][col + i] = 'B'\r\n                        }\r\n                        else if (playerState.ships[ship].orientation == 's') {\r\n                            playerState.board[row + i][col] = 'B'\r\n                        }\r\n                        break\r\n                    case 'destroyer':\r\n                        if (playerState.ships[ship].orientation == 'e') {\r\n                            playerState.board[row][col + i] = 'D'\r\n                        }\r\n                        else if (playerState.ships[ship].orientation == 's') {\r\n                            playerState.board[row + i][col] = 'D'\r\n                        }\r\n                        break\r\n                    case 'aircraftcarrier':\r\n                        if (playerState.ships[ship].orientation == 'e') {\r\n                            playerState.board[row][col + i] = 'A'\r\n                        }\r\n                        else if (playerState.ships[ship].orientation == 's') {\r\n                            playerState.board[row + i][col] = 'A'\r\n                        }\r\n                        break\r\n                    case 'submarine':\r\n                        if (playerState.ships[ship].orientation == 'e') {\r\n                            playerState.board[row][col + i] = 'S'\r\n                        }\r\n                        else if (playerState.ships[ship].orientation == 's') {\r\n                            playerState.board[row + i][col] = 'S'\r\n                        }\r\n                        break\r\n                    case 'patrolboat':\r\n                        if (playerState.ships[ship].orientation == 'e') {\r\n                            playerState.board[row][col + i] = 'P'\r\n                        }\r\n                        else if (playerState.ships[ship].orientation == 's') {\r\n                            playerState.board[row + i][col] = 'P'\r\n                        }\r\n                        break\r\n                }\r\n                lastPosition.occupied = true;\r\n                lastPosition = lastPosition[orientation];\r\n            }\r\n            playerState.ships[ship].position = index;\r\n            validPosition = false;\r\n        }\r\n    }\r\n\r\n    function getRandomPosition() {\r\n        return Math.floor(Math.random() * 100);\r\n    }\r\n\r\n    // function generateShip(shipLength) {\r\n    //     let prow = []\r\n    //     let isPlaceable\r\n\r\n    //     do {\r\n    //         for (let axis = 0; axis < 2; axis++) {\r\n    //             prow[axis] = getRandomInt(0, 10)\r\n    //         }\r\n    //         isPlaceable = placeable(prow, shipLength)\r\n    //     } while (!isPlaceable)\r\n\r\n    //     playerState.board[prow[0]][prow[1]] = 'O'\r\n    //     /* วางเรือ แบบสุ่มทิศ */\r\n    //     switch (getRandomInt(1, 4)) {\r\n    //         case 1:\r\n    //             for (let i = prow[0]; i < prow[0] + shipLength; i++) {\r\n    //                 playerState.board[i][prow[1]] = 'O';\r\n    //             }\r\n    //             break;\r\n    //         case 2:\r\n    //             for (let i = prow[1]; i < prow[1] + shipLength; i++) {\r\n    //                 playerState.board[prow[0]][i] = 'O';\r\n    //             }\r\n    //             break;\r\n    //         case 3:\r\n    //             for (let i = prow[0] - (shipLength - 1); i < prow[0]; i++) {\r\n    //                 playerState.board[i][prow[1]] = 'O';\r\n    //             }\r\n    //             break;\r\n    //         case 4:\r\n    //             for (let i = prow[1] - (shipLength - 1); i < prow[1]; i++) {\r\n    //                 playerState.board[prow[0]][i] = 'O';\r\n    //             }\r\n    //             break;\r\n    //     }\r\n    // }\r\n\r\n    // function step() {\r\n    //     play()\r\n    //     calculateDensity()\r\n    // }\r\n\r\n    useEffect(() => {\r\n        // generateShip(2)\r\n        // generateShip(3)\r\n        // generateShip(3)\r\n        // generateShip(4)\r\n        // generateShip(5)\r\n        placeShips()\r\n        console.log(playerState.name + \" board: \")\r\n        console.log(playerState.board)\r\n        console.log(playerState.ships)\r\n    }, [setPlayerState])\r\n\r\n    // สร้างตารางโดยรับค่า id และ src\r\n    const createCell = (id, src) => {\r\n\r\n        // ถ้าเป็นแถวแรกให้สร้าง header ระบุเลขช่องด้วยนอกจากนั้นก็สร้างแค่ช่องปกติ\r\n        if (id[0] === 0) {\r\n            return (\r\n                <th>\r\n                    {id[1] + 1}\r\n                    <td className='cell parent'>\r\n                        <img class=\"image1\" id={id} src={src} onClick={play} />\r\n                        <div class=\"image2\"> {Math.floor(playerState.positions[id[1]].probability)} </div>\r\n                    </td>\r\n                </th>\r\n            )\r\n        }\r\n        return (\r\n            <td className='cell parent'>\r\n                <img class=\"image1\" id={id} src={src} onClick={play} />\r\n                <div class=\"image2\"> {Math.floor(playerState.positions[(parseInt(id[0].toString()) + (id[1].toString()))].probability)} </div>\r\n            </td>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h2>{props.player}</h2>\r\n            <table>\r\n\r\n                {Array.from({ length: 10 }).map((_, row) => {\r\n\r\n                    var ascii = 65\r\n                    return (\r\n                        <tr>\r\n                            <th>\r\n                                {String.fromCharCode(ascii + row)}\r\n                            </th>\r\n                            {Array.from({ length: 10 }).map((_, col) => {\r\n                                var index = ((10 - row - 1) * 10) + (10 - col)\r\n                                var id = [row, col]\r\n                                var src = 'map/' + index + '.jpg'\r\n                                return (\r\n                                    createCell(id, src)\r\n                                )\r\n\r\n                            })}\r\n                        </tr>\r\n                    )\r\n                })}\r\n            </table>\r\n            <Button  />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Table\r\n"]},"metadata":{},"sourceType":"module"}