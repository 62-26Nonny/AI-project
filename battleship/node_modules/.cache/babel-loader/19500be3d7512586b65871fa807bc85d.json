{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gurum\\\\Documents\\\\AI project\\\\battleship\\\\src\\\\components\\\\Table.js\",\n    _s = $RefreshSig$();\n\nimport { Container, Button } from 'react-bootstrap';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Table = props => {\n  _s();\n\n  //สร้างรูปแบบ state ของ player\n  const player = Object.freeze({\n    name: props.player,\n    boardn    position: Array.from([]),\n    founded: 0\n  });\n  var ships = {\n    'aircraft-carrier': {\n      alive: true,\n      length: 5\n    },\n    'battleship': {\n      alive: true,\n      length: 4\n    },\n    'destroyer': {\n      alive: true,\n      length: 3\n    },\n    'submarine': {\n      alive: true,\n      length: 3\n    },\n    'patrolship': {\n      alive: true,\n      length: 2\n    }\n  };\n  var positions = [];\n\n  for (var i = 1; i <= 100; i++) {\n    var row = Math.floor(i / 10);\n    var col = i % 10;\n    positions[i] = {\n      index: i,\n      probability: 0,\n      fired: false,\n      row: row,\n      col: col\n    };\n  } // for (var i = 0; i < 100; i++) {\n  //     positions[i].w = (positions[i - 1] && positions[i - 1].row === positions[i].row) ? positions[i - 1] : null;\n  //     positions[i].e = (positions[i + 1] && positions[i + 1].row === positions[i].row) ? positions[i + 1] : null;\n  //     positions[i].n = positions[i - 10] ? positions[i - 10] : null;\n  //     positions[i].s = positions[i + 10] ? positions[i + 10] : null;\n  // }\n\n\n  function tryShip(ship, position, direction) {\n    var check_position = positions[position];\n\n    try {\n      for (var i = 1; i <= ship.length; i++) {\n        if (!check_position || check_position.fired) {\n          return false;\n        }\n\n        if (direction == 'e') {\n          check_position = positions[position + i];\n        } else if (direction == 's') {\n          check_position = positions[position + i * 10];\n        }\n      }\n\n      return true;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  function calculateDensity() {\n    for (var shipName in ships) {\n      var ship = ships[shipName];\n\n      if (ship.alive) {\n        for (var i = 1; i <= 100; i++) {\n          if (tryShip(ship, i, 'e')) {\n            for (var j = 0; j < ship.length; j++) {\n              positions[i + j].probability++;\n            }\n          }\n\n          if (tryShip(ship, i, 's')) {\n            for (var j = 0; j < ship.length; j++) {\n              positions[i + j * 10].probability++;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  calculateDensity();\n\n  for (var i = 1; i <= 100; i++) {\n    var text;\n\n    if (i % 10 == 0) {\n      console.log(text + '\\n');\n    }\n\n    text += positions[i].probability + ' ';\n  } //สร้าง plyer state โดยใช้รูปแบบ player\n\n\n  const [playerState, setPlayerState] = useState(player);\n  var gameover = false;\n\n  function allowDrop(ev) {\n    ev.preventDefault();\n  }\n\n  async function drop(ev) {\n    var cell_id = ev.target.id;\n    var row = parseInt(cell_id.slice(0, 1));\n    var col = parseInt(cell_id.slice(2));\n    let prow = [];\n    prow[0] = row;\n    prow[1] = col;\n    let isPlaceable; // console.log(row + ' ' + col)\n    // console.log(cell_id)\n\n    ev.preventDefault();\n    var data = ev.dataTransfer.getData(\"text\");\n    var ship = document.getElementById(data);\n    console.log(ship.id); // console.log(ship.childNodes)\n\n    var ship_size = ship.childElementCount;\n    isPlaceable = placeable(prow, ship_size);\n\n    if (isPlaceable) {\n      for (var i = 0; i < ship_size; i++) {\n        // console.log(i)\n        cell_id = document.getElementById(row + ',' + (col + i));\n        cell_id.parentElement.classList.add('parent');\n\n        if (ship.id === 'DD') {\n          playerState.board[row + 1][col + i + 1] = 'DD';\n        } else if (ship.id === 'CU') {\n          playerState.board[row + 1][col + i + 1] = 'CU';\n        } else if (ship.id === 'BS') {\n          playerState.board[row + 1][col + i + 1] = 'BS';\n        } else {\n          playerState.board[row + 1][col + i + 1] = 'AC';\n        } // console.log('Target cell '+ i + ':' + cell_id.id)\n        // console.log('ship part '+ i + ':' + ship.childNodes[i].id)\n\n\n        var ship_part = ship.childNodes[0];\n        ship_part.classList.add(\"image2\"); // ship_part.classList.add('hidden');\n\n        ship_part.classList.remove(\"part\"); // cell_id.appendChild(ship.childNodes[i])\n\n        cell_id.insertAdjacentElement('afterend', ship_part); // console.log('Target cell after insert '+ i + ':' + cell_id)\n      }\n\n      console.log(playerState.board);\n    } else console.log(\"not placeable\");\n  }\n\n  function set() {\n    var ships = document.getElementsByClassName('parent');\n    var part_id = [];\n\n    for (let index = 0; index < ships.length; index++) {\n      console.log(ships[index].childNodes[1].id);\n      ships[index].childNodes[1].classList.add('hidden');\n      part_id.push(ships[index].childNodes[1].id.slice(0, 2));\n    }\n\n    console.log(playerState.board);\n    console.log(part_id);\n  } // function check_boom() {\n  //     var ships = document.getElementsByClassName('parent')\n  //     var part_id = [];\n  //     for (let index = 0; index < ships.length; index++) {\n  //         part_id.push(ships[index].childNodes[1].id.slice(0,2));\n  //     }\n  //     console.log (part_id)\n  // }\n  // ฟังก์ชั่นสุ่มเลขโดยรับค่า min max\n\n\n  function getRandomInt(min, max) {\n    const minimum = Math.ceil(min);\n    const maximum = Math.floor(max);\n    return Math.floor(Math.random() * (maximum - minimum + 1)) + minimum;\n  } // ฟังก์ชั่นสุ่มตำแหน่งหัวเรือโดยรับ min max และ arrayไว้เก็บตำแหน่งเรือ\n\n\n  function randomShip(min, max, excludeArrayNumbers) {\n    let randomNumber; // เช็คว่า excludeArrayNumbers เป็น array หรือไม่???\n\n    if (!Array.isArray(excludeArrayNumbers)) {\n      randomNumber = getRandomInt(min, max);\n      return randomNumber;\n    } // ให้สุ่มตำแหน่งหัวเรือเรื่อยๆ จนกว่าตำแหน่งที่ได้ไม่ซ้ำกับตำแหน่งที่มี หรือเมื่อเป็น array ว่าง\n\n\n    do {\n      randomNumber = getRandomInt(min, max);\n    } while ((excludeArrayNumbers || []).includes(randomNumber));\n\n    return randomNumber;\n  } // ฟั่งชั่นที่ทำงานเมื่อผู้เล่นกดช่องตาราง \n\n\n  function play(e) {\n    //เช็คว่ามีเรือรึเปล่า\n    var found = checkShip(e); // เมื่อเจอเรือให้บวกแต้มฝั่งผู้เล่นที่เจอ\n\n    if (found) {\n      foundShip(e);\n      setPlayerState({ ...playerState,\n        founded: playerState.founded + 1\n      }); // เมื่อแต้มครบ จบเกม\n\n      if (playerState.founded === 10) {\n        gameover = true;\n      }\n    } else {\n      notFound(e);\n    } //เช็คว่าเกมจบรึยัง\n\n\n    if (gameover) {\n      //เมื่อจบแล้วไปแสดงหน้าจบเกม\n      end();\n    }\n  } // ฟังก์ชั่นสุ่มสำหรับเซ็กว่าผู้เล่นยิงโดนเรือตรงข้ามหรือไม่\n\n\n  function checkShip(e) {\n    // ให้ตัวแปล clicked เก็บตำแหน่งที่ผู้เล่นกด\n    var clicked = [parseInt(e.target.id[0]), parseInt(e.target.id[2])]; // เช็คว่าเจอเรือไหม (เรือ: \"O\")\n\n    if (!(playerState.board[clicked[0] + 1][clicked[1] + 1] === \"-\")) {\n      playerState.board[clicked[0] + 1][clicked[1] + 1] = \"x\";\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  function notFound(e) {\n    console.log(playerState.name + ': nothing here...');\n    e.target.src = 'https://tmsvalue.co.uk/wp-content/uploads/2017/03/Square-500x500-red.png';\n  }\n\n  function foundShip(e) {\n    // var ships = document.getElementsByClassName('parent')\n    // var part_id = [];\n    // for (let index = 0; index < ships.length; index++) {\n    //     part_id.push(ships[index].childNodes[1].id.slice(0,2)); \n    // }\n    var is_DD_Alive = true;\n\n    for (var i = 0; i < 12; i++) {\n      console.log(playerState.board[i]);\n\n      if (playerState.board[i].includes(\"DD\")) {\n        is_DD_Alive = true;\n        break;\n      } else is_DD_Alive = false;\n    }\n\n    console.log(playerState.name + ': FOUND SHIP!!!');\n\n    if (!is_DD_Alive) {\n      console.log('Destroyer Ship Sunk!');\n    } // if(!(part_id.includes(\"DD\"))){\n    //     console.log('Destroyer Ship Sunk!')\n    // }\n\n\n    e.target.src = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR9qcrQeLufxv61jZ194tG5CJvux0p4U4-r2g&usqp=CAU';\n    console.log(playerState.board);\n  }\n\n  function end() {\n    console.log(playerState.name + 'WIN!!!');\n  }\n  /* ต้องลงได้ทั้ง 4 ทิศ ถึงจะผ่าน */\n\n\n  function placeable(head, length) {\n    try {\n      for (let axis = 0; axis < 2; axis++) {\n        for (let i = head[axis] - (length - 1); i < head[axis] + (length - 1); i++) {\n          let temp;\n          if (axis === 0) temp = playerState.board[i][head[1]];else temp = playerState.board[head[0]][i];\n\n          if (temp === '-') {\n            continue;\n          } else {\n            /* ถ้าวางไม่ได้ ยกเลิกทันที */\n            return false;\n          }\n        }\n      }\n\n      return true;\n    } catch (TypeError) {\n      /* โค้ดไม่ได้แยกแยะเรื่องหลุดแมพ ทำให้ TypeError ถ้าเลือกขอบแมพแล้วขนาดยาวจนเกิน Board (เกิน Length array ของ board) ซึ่งถ้าเป็นแบบนี้มันลงไม่ได้อยู่แล้ว return false ไปเลย*/\n      return false;\n    }\n  }\n  /* Algo's test case\r\n  let prow1 = [1, 10]\r\n  let prow2 = [4, 6]\r\n  let prow3 = [8, 3]\r\n  */\n\n  /* Algo's test case\r\n  let isPlaceable1 = placeable(prow1, shipLength, board)\r\n  let isPlaceable2 = placeable(prow2, shipLength, board)\r\n  let isPlaceable3 = placeable(prow3, shipLength, board)\r\n  console.log(\"Map's edge case : \", isPlaceable1)\r\n  console.log(\"Board occupied case (By other ship) : \", isPlaceable2)\r\n  console.log(\"No case : \", isPlaceable3)\r\n  */\n\n\n  function generateShip(shipLength) {\n    let prow = [];\n    let isPlaceable;\n\n    do {\n      for (let axis = 0; axis < 2; axis++) {\n        prow[axis] = getRandomInt(0, 10);\n      }\n\n      isPlaceable = placeable(prow, shipLength);\n    } while (!isPlaceable);\n\n    playerState.board[prow[0]][prow[1]] = 'O';\n    /* วางเรือ แบบสุ่มทิศ */\n\n    switch (getRandomInt(1, 4)) {\n      case 1:\n        for (let i = prow[0]; i < prow[0] + shipLength; i++) {\n          playerState.board[i][prow[1]] = 'O';\n        }\n\n        break;\n\n      case 2:\n        for (let i = prow[1]; i < prow[1] + shipLength; i++) {\n          playerState.board[prow[0]][i] = 'O';\n        }\n\n        break;\n\n      case 3:\n        for (let i = prow[0] - (shipLength - 1); i < prow[0]; i++) {\n          playerState.board[i][prow[1]] = 'O';\n        }\n\n        break;\n\n      case 4:\n        for (let i = prow[1] - (shipLength - 1); i < prow[1]; i++) {\n          playerState.board[prow[0]][i] = 'O';\n        }\n\n        break;\n    }\n  }\n\n  useEffect(() => {\n    // generateShip(2)\n    // generateShip(3)\n    // generateShip(2)\n    // generateShip(3)\n    // generateShip(4)\n    console.log(playerState.name + \" board: \");\n    console.log(playerState.board);\n  }, [setPlayerState]); // สร้างตารางโดยรับค่า id และ src\n\n  const createCell = (id, src) => {\n    // ถ้าเป็นแถวแรกให้สร้าง header ระบุเลขช่องด้วยนอกจากนั้นก็สร้างแค่ช่องปกติ\n    if (id[0] === 0) {\n      return /*#__PURE__*/_jsxDEV(\"th\", {\n        children: [id[1] + 1, /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"cell\",\n          onDrop: drop,\n          onDragOver: allowDrop,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            class: \"image1\",\n            id: id,\n            src: src,\n            onClick: play,\n            draggable: \"false\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"cell\",\n      onDrop: drop,\n      onDragOver: allowDrop,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        class: \"image1\",\n        id: id,\n        src: src,\n        onClick: play,\n        draggable: \"false\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.player\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: Array.from({\n        length: 10\n      }).map((_, row) => {\n        var ascii = 65;\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: String.fromCharCode(ascii + row)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 29\n          }, this), Array.from({\n            length: 10\n          }).map((_, col) => {\n            var index = (10 - row - 1) * 10 + (10 - col);\n            var id = [row, col];\n            var src = 'map/' + index + '.jpg';\n            return createCell(id, src);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"success\",\n      onClick: set,\n      children: \"Set Ship\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"warning\",\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 441,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Table, \"KzrVYW86ABp7zLDQcs4XITTa6AA=\");\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/gurum/Documents/AI project/battleship/src/components/Table.js"],"names":["Container","Button","useEffect","useState","Table","props","player","Object","freeze","name","board","position","Array","from","founded","ships","alive","length","positions","i","row","Math","floor","col","index","probability","fired","tryShip","ship","direction","check_position","err","calculateDensity","shipName","j","text","console","log","playerState","setPlayerState","gameover","allowDrop","ev","preventDefault","drop","cell_id","target","id","parseInt","slice","prow","isPlaceable","data","dataTransfer","getData","document","getElementById","ship_size","childElementCount","placeable","parentElement","classList","add","ship_part","childNodes","remove","insertAdjacentElement","set","getElementsByClassName","part_id","push","getRandomInt","min","max","minimum","ceil","maximum","random","randomShip","excludeArrayNumbers","randomNumber","isArray","includes","play","e","found","checkShip","foundShip","notFound","end","clicked","src","is_DD_Alive","head","axis","temp","TypeError","generateShip","shipLength","createCell","map","_","ascii","String","fromCharCode"],"mappings":"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","sourcesContent":["\r\nimport { Container, Button } from 'react-bootstrap'\r\nimport { useEffect, useState } from 'react'\r\n\r\n\r\n\r\nconst Table = (props) => {\r\n\r\n    //สร้างรูปแบบ state ของ player\r\n    const player = Object.freeze({\r\n        name: props.player,\r\n        board: [\r\n            ['X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X']\r\n        ],\r\n        position: Array.from([]),\r\n        founded: 0,\r\n    })\r\n\r\n    var ships = {\r\n        'aircraft-carrier': {\r\n            alive: true,\r\n            length: 5\r\n        },\r\n        'battleship': {\r\n            alive: true,\r\n            length: 4\r\n        },\r\n        'destroyer': {\r\n            alive: true,\r\n            length: 3\r\n        },\r\n        'submarine': {\r\n            alive: true,\r\n            length: 3\r\n        },\r\n        'patrolship': {\r\n            alive: true,\r\n            length: 2\r\n        },\r\n    }\r\n\r\n    var positions = []\r\n    for (var i = 1; i <= 100; i++) {\r\n        var row = Math.floor(i / 10)\r\n        var col = i % 10\r\n\r\n        positions[i] = {\r\n            index: i,\r\n            probability: 0,\r\n            fired: false,\r\n            row: row,\r\n            col: col\r\n        }\r\n    }\r\n\r\n    // for (var i = 0; i < 100; i++) {\r\n    //     positions[i].w = (positions[i - 1] && positions[i - 1].row === positions[i].row) ? positions[i - 1] : null;\r\n    //     positions[i].e = (positions[i + 1] && positions[i + 1].row === positions[i].row) ? positions[i + 1] : null;\r\n    //     positions[i].n = positions[i - 10] ? positions[i - 10] : null;\r\n    //     positions[i].s = positions[i + 10] ? positions[i + 10] : null;\r\n    // }\r\n\r\n    function tryShip(ship, position, direction) {\r\n        var check_position = positions[position]\r\n        try {\r\n            for (var i = 1; i <= ship.length; i++) {\r\n                if (!check_position || check_position.fired) {\r\n                    return false\r\n                }\r\n                if (direction == 'e'){\r\n                    check_position = positions[position + i]\r\n                }\r\n                else if (direction == 's'){\r\n                    check_position = positions[position + (i * 10)]\r\n                }\r\n                \r\n            }\r\n            return true\r\n        } catch(err) {\r\n            return false\r\n        }\r\n        \r\n    }\r\n\r\n    function calculateDensity() {\r\n        for (var shipName in ships) {\r\n            var ship = ships[shipName]\r\n            if (ship.alive) {\r\n                for (var i = 1; i <= 100; i++) {\r\n                    if (tryShip(ship, i, 'e')) {\r\n                        for (var j = 0; j < ship.length; j++) {\r\n                            positions[i + j].probability++\r\n                        }\r\n                    }\r\n                    if (tryShip(ship, i, 's')) {\r\n                        for (var j = 0; j < ship.length; j++) {\r\n                            positions[i + (j * 10)].probability++\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    calculateDensity()\r\n    for(var i = 1; i <= 100; i++){\r\n        var text\r\n        if(i % 10 == 0){\r\n            console.log(text + '\\n')\r\n        }\r\n        text += positions[i].probability + ' '\r\n        \r\n    }\r\n\r\n    //สร้าง plyer state โดยใช้รูปแบบ player\r\n    const [playerState, setPlayerState] = useState(player)\r\n\r\n    var gameover = false\r\n\r\n    function allowDrop(ev) {\r\n        ev.preventDefault();\r\n    }\r\n\r\n    async function drop(ev) {\r\n        var cell_id = ev.target.id\r\n        var row = parseInt(cell_id.slice(0, 1))\r\n        var col = parseInt(cell_id.slice(2))\r\n\r\n        let prow = []\r\n        prow[0] = row;\r\n        prow[1] = col;\r\n\r\n        let isPlaceable\r\n        // console.log(row + ' ' + col)\r\n        // console.log(cell_id)\r\n        ev.preventDefault();\r\n\r\n        var data = ev.dataTransfer.getData(\"text\");\r\n        var ship = document.getElementById(data)\r\n\r\n        console.log(ship.id)\r\n        // console.log(ship.childNodes)\r\n        var ship_size = ship.childElementCount\r\n\r\n        isPlaceable = placeable(prow, ship_size)\r\n        if (isPlaceable) {\r\n            for (var i = 0; i < ship_size; i++) {\r\n                // console.log(i)\r\n                cell_id = (document.getElementById(row + ',' + (col + i)));\r\n                cell_id.parentElement.classList.add('parent')\r\n\r\n                if (ship.id === 'DD') {\r\n                    playerState.board[row + 1][col + i + 1] = 'DD'\r\n                } else if (ship.id === 'CU') {\r\n                    playerState.board[row + 1][col + i + 1] = 'CU'\r\n                } else if (ship.id === 'BS') {\r\n                    playerState.board[row + 1][col + i + 1] = 'BS'\r\n                } else {\r\n                    playerState.board[row + 1][col + i + 1] = 'AC'\r\n                }\r\n\r\n\r\n                // console.log('Target cell '+ i + ':' + cell_id.id)\r\n                // console.log('ship part '+ i + ':' + ship.childNodes[i].id)\r\n                var ship_part = ship.childNodes[0]\r\n                ship_part.classList.add(\"image2\");\r\n                // ship_part.classList.add('hidden');\r\n                ship_part.classList.remove(\"part\");\r\n                // cell_id.appendChild(ship.childNodes[i])\r\n                cell_id.insertAdjacentElement('afterend', (ship_part))\r\n\r\n                // console.log('Target cell after insert '+ i + ':' + cell_id)\r\n\r\n            }\r\n            console.log(playerState.board)\r\n        } else\r\n            console.log(\"not placeable\")\r\n\r\n    }\r\n\r\n    function set() {\r\n        var ships = document.getElementsByClassName('parent')\r\n        var part_id = [];\r\n\r\n        for (let index = 0; index < ships.length; index++) {\r\n            console.log(ships[index].childNodes[1].id)\r\n            ships[index].childNodes[1].classList.add('hidden')\r\n            part_id.push(ships[index].childNodes[1].id.slice(0, 2));\r\n\r\n        }\r\n        console.log(playerState.board)\r\n        console.log(part_id)\r\n\r\n    }\r\n\r\n    // function check_boom() {\r\n    //     var ships = document.getElementsByClassName('parent')\r\n    //     var part_id = [];\r\n\r\n    //     for (let index = 0; index < ships.length; index++) {\r\n    //         part_id.push(ships[index].childNodes[1].id.slice(0,2));\r\n\r\n    //     }\r\n    //     console.log (part_id)\r\n\r\n    // }\r\n\r\n    // ฟังก์ชั่นสุ่มเลขโดยรับค่า min max\r\n    function getRandomInt(min, max) {\r\n        const minimum = Math.ceil(min);\r\n        const maximum = Math.floor(max);\r\n\r\n        return Math.floor(Math.random() * (maximum - minimum + 1)) + minimum;\r\n    }\r\n\r\n    // ฟังก์ชั่นสุ่มตำแหน่งหัวเรือโดยรับ min max และ arrayไว้เก็บตำแหน่งเรือ\r\n    function randomShip(min, max, excludeArrayNumbers) {\r\n        let randomNumber;\r\n\r\n        // เช็คว่า excludeArrayNumbers เป็น array หรือไม่???\r\n        if (!Array.isArray(excludeArrayNumbers)) {\r\n            randomNumber = getRandomInt(min, max);\r\n            return randomNumber;\r\n        }\r\n\r\n        // ให้สุ่มตำแหน่งหัวเรือเรื่อยๆ จนกว่าตำแหน่งที่ได้ไม่ซ้ำกับตำแหน่งที่มี หรือเมื่อเป็น array ว่าง\r\n        do {\r\n            randomNumber = getRandomInt(min, max);\r\n        } while ((excludeArrayNumbers || []).includes(randomNumber));\r\n\r\n        return randomNumber;\r\n    }\r\n\r\n    // ฟั่งชั่นที่ทำงานเมื่อผู้เล่นกดช่องตาราง \r\n    function play(e) {\r\n        //เช็คว่ามีเรือรึเปล่า\r\n        var found = checkShip(e)\r\n\r\n        // เมื่อเจอเรือให้บวกแต้มฝั่งผู้เล่นที่เจอ\r\n        if (found) {\r\n            foundShip(e)\r\n\r\n            setPlayerState({\r\n                ...playerState,\r\n                founded: playerState.founded + 1\r\n            })\r\n            // เมื่อแต้มครบ จบเกม\r\n            if (playerState.founded === 10) {\r\n                gameover = true\r\n            }\r\n        }\r\n        else {\r\n            notFound(e)\r\n        }\r\n\r\n        //เช็คว่าเกมจบรึยัง\r\n        if (gameover) {\r\n            //เมื่อจบแล้วไปแสดงหน้าจบเกม\r\n            end()\r\n        }\r\n    }\r\n\r\n    // ฟังก์ชั่นสุ่มสำหรับเซ็กว่าผู้เล่นยิงโดนเรือตรงข้ามหรือไม่\r\n    function checkShip(e) {\r\n        // ให้ตัวแปล clicked เก็บตำแหน่งที่ผู้เล่นกด\r\n        var clicked = [parseInt(e.target.id[0]), parseInt(e.target.id[2])]\r\n\r\n        // เช็คว่าเจอเรือไหม (เรือ: \"O\")\r\n        if (!(playerState.board[clicked[0] + 1][clicked[1] + 1] === \"-\")) {\r\n            playerState.board[clicked[0] + 1][clicked[1] + 1] = \"x\"\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    function notFound(e) {\r\n        console.log(playerState.name + ': nothing here...')\r\n        e.target.src = 'https://tmsvalue.co.uk/wp-content/uploads/2017/03/Square-500x500-red.png'\r\n    }\r\n\r\n    function foundShip(e) {\r\n\r\n        // var ships = document.getElementsByClassName('parent')\r\n        // var part_id = [];\r\n\r\n        // for (let index = 0; index < ships.length; index++) {\r\n        //     part_id.push(ships[index].childNodes[1].id.slice(0,2)); \r\n        // }\r\n        var is_DD_Alive = true\r\n        for (var i = 0; i < 12; i++) {\r\n            console.log(playerState.board[i])\r\n            if ((playerState.board[i].includes(\"DD\"))) {\r\n                is_DD_Alive = true\r\n                break;\r\n            } else is_DD_Alive = false\r\n        }\r\n\r\n        console.log(playerState.name + ': FOUND SHIP!!!')\r\n        if (!is_DD_Alive) {\r\n            console.log('Destroyer Ship Sunk!')\r\n        }\r\n        // if(!(part_id.includes(\"DD\"))){\r\n        //     console.log('Destroyer Ship Sunk!')\r\n        // }\r\n\r\n        e.target.src = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR9qcrQeLufxv61jZ194tG5CJvux0p4U4-r2g&usqp=CAU'\r\n        console.log(playerState.board)\r\n    }\r\n\r\n    function end() {\r\n        console.log(playerState.name + 'WIN!!!')\r\n    }\r\n\r\n    /* ต้องลงได้ทั้ง 4 ทิศ ถึงจะผ่าน */\r\n    function placeable(head, length) {\r\n\r\n        try {\r\n            for (let axis = 0; axis < 2; axis++) {\r\n                for (let i = head[axis] - (length - 1); i < head[axis] + (length - 1); i++) {\r\n                    let temp\r\n\r\n                    if (axis === 0)\r\n                        temp = playerState.board[i][head[1]]\r\n                    else\r\n                        temp = playerState.board[head[0]][i]\r\n\r\n                    if (temp === '-') {\r\n                        continue\r\n                    }\r\n                    else {\r\n                        /* ถ้าวางไม่ได้ ยกเลิกทันที */\r\n                        return false\r\n                    }\r\n                }\r\n            }\r\n\r\n            return true\r\n\r\n        } catch (TypeError) {\r\n            /* โค้ดไม่ได้แยกแยะเรื่องหลุดแมพ ทำให้ TypeError ถ้าเลือกขอบแมพแล้วขนาดยาวจนเกิน Board (เกิน Length array ของ board) ซึ่งถ้าเป็นแบบนี้มันลงไม่ได้อยู่แล้ว return false ไปเลย*/\r\n            return false\r\n        }\r\n    }\r\n\r\n    /* Algo's test case\r\n    let prow1 = [1, 10]\r\n    let prow2 = [4, 6]\r\n    let prow3 = [8, 3]\r\n    */\r\n\r\n    /* Algo's test case\r\n    let isPlaceable1 = placeable(prow1, shipLength, board)\r\n    let isPlaceable2 = placeable(prow2, shipLength, board)\r\n    let isPlaceable3 = placeable(prow3, shipLength, board)\r\n    console.log(\"Map's edge case : \", isPlaceable1)\r\n    console.log(\"Board occupied case (By other ship) : \", isPlaceable2)\r\n    console.log(\"No case : \", isPlaceable3)\r\n    */\r\n\r\n    function generateShip(shipLength) {\r\n        let prow = []\r\n        let isPlaceable\r\n\r\n        do {\r\n            for (let axis = 0; axis < 2; axis++) {\r\n                prow[axis] = getRandomInt(0, 10)\r\n            }\r\n            isPlaceable = placeable(prow, shipLength)\r\n        } while (!isPlaceable)\r\n\r\n        playerState.board[prow[0]][prow[1]] = 'O'\r\n        /* วางเรือ แบบสุ่มทิศ */\r\n        switch (getRandomInt(1, 4)) {\r\n            case 1:\r\n                for (let i = prow[0]; i < prow[0] + shipLength; i++) {\r\n                    playerState.board[i][prow[1]] = 'O';\r\n                }\r\n                break;\r\n            case 2:\r\n                for (let i = prow[1]; i < prow[1] + shipLength; i++) {\r\n                    playerState.board[prow[0]][i] = 'O';\r\n                }\r\n                break;\r\n            case 3:\r\n                for (let i = prow[0] - (shipLength - 1); i < prow[0]; i++) {\r\n                    playerState.board[i][prow[1]] = 'O';\r\n                }\r\n                break;\r\n            case 4:\r\n                for (let i = prow[1] - (shipLength - 1); i < prow[1]; i++) {\r\n                    playerState.board[prow[0]][i] = 'O';\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // generateShip(2)\r\n        // generateShip(3)\r\n        // generateShip(2)\r\n        // generateShip(3)\r\n        // generateShip(4)\r\n        console.log(playerState.name + \" board: \")\r\n        console.log(playerState.board)\r\n    }, [setPlayerState])\r\n\r\n    // สร้างตารางโดยรับค่า id และ src\r\n    const createCell = (id, src) => {\r\n\r\n        // ถ้าเป็นแถวแรกให้สร้าง header ระบุเลขช่องด้วยนอกจากนั้นก็สร้างแค่ช่องปกติ\r\n        if (id[0] === 0) {\r\n            return (\r\n                <th>\r\n                    {id[1] + 1}\r\n                    <td className='cell' onDrop={drop} onDragOver={allowDrop} >\r\n                        <img class=\"image1\" id={id} src={src} onClick={play} draggable='false' />\r\n                    </td>\r\n                </th>\r\n            )\r\n        }\r\n        return (\r\n            <td className='cell' onDrop={drop} onDragOver={allowDrop} >\r\n                <img class=\"image1\" id={id} src={src} onClick={play} draggable='false' />\r\n            </td>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h2>{props.player}</h2>\r\n            <table>\r\n\r\n                {Array.from({ length: 10 }).map((_, row) => {\r\n\r\n                    var ascii = 65\r\n                    return (\r\n                        <tr>\r\n                            <th>\r\n                                {String.fromCharCode(ascii + row)}\r\n                            </th>\r\n                            {Array.from({ length: 10 }).map((_, col) => {\r\n                                var index = ((10 - row - 1) * 10) + (10 - col)\r\n                                var id = [row, col]\r\n                                var src = 'map/' + index + '.jpg'\r\n                                return (\r\n                                    createCell(id, src)\r\n                                )\r\n\r\n                            })}\r\n                        </tr>\r\n                    )\r\n                })}\r\n            </table>\r\n            <Button variant=\"success\" onClick={set}>Set Ship</Button>\r\n            <Button variant=\"warning\">Reset</Button>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Table\r\n"]},"metadata":{},"sourceType":"module"}