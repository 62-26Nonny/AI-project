{"ast":null,"code":"export function AI(playerState) {\n  var pos;\n  var max = 0;\n  var max_position;\n  var table = document.getElementById('gurumi');\n  var cells = table.getElementsByClassName('image1');\n  /*\r\n  // Randomly pick a cell\r\n  do {\r\n      pos = Math.floor(Math.random() * 100)\r\n  } while (playerState.positions[pos].probability === '-1')\r\n  // Give a value\r\n  playerState.positions[pos].probability = 200\r\n  // Click highest\r\n  for(var i = 0; i < 100; i++) {\r\n      if (max < playerState.positions[i].probability) {\r\n          max = playerState.positions[i].probability\r\n          max_position = i\r\n      }\r\n  }\r\n  console.log(max_position)\r\n    if (max_position >= 0) {\r\n      cells[max_position].click()\r\n  }\r\n  // Calculate adjacent\r\n  calculateNextPos(playerState)\r\n  */\n\n  for (var i = 0; i < 100; i++) {\n    if (max < playerState.positions[i].probability) {\n      max = playerState.positions[i].probability;\n      max_position = i;\n    }\n  }\n\n  if (max === 0) {\n    // Randomly pick a cell\n    do {\n      pos = Math.floor(Math.random() * 100);\n    } while (playerState.positions[pos].probability === '-1');\n\n    max_position = pos;\n  }\n\n  if (max_position >= 0) {\n    cells[max_position].click();\n  }\n\n  calculateNextPos(playerState);\n}\n_c = AI;\n\nfunction calculateNextPos(playerState) {\n  var randomness = 2;\n  var directions = {\n    'w': null,\n    'n': null,\n    'e': null,\n    's': null\n  };\n  console.log(\"In a func\");\n\n  for (var i = 0; i < 100; i++) {\n    if (playerState.positions[i].fired) {\n      console.log(\"In a 'fired'\", i);\n      console.log(playerState.positions[i].hit, playerState.positions[i].probability);\n\n      if (playerState.positions[i].hit && playerState.positions[i].probability !== -1) {\n        console.log(\"In a 'sunk'\", i);\n\n        for (var direction in directions) {\n          playerState.positions[i][direction].probability += 50 * Math.floor(Math.random() * randomness);\n\n          if (playerState.positions[i][direction][direction] !== null) {\n            playerState.positions[i][direction][direction].probability += 25 * Math.floor(Math.random() * randomness);\n          }\n        }\n      } // Give -1 \n\n\n      playerState.positions[i].probability = -1;\n    }\n  }\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AI\");","map":{"version":3,"sources":["F:/Code/Project/AI-project/battleship/src/AI/AI_team2.js"],"names":["AI","playerState","pos","max","max_position","table","document","getElementById","cells","getElementsByClassName","i","positions","probability","Math","floor","random","click","calculateNextPos","randomness","directions","console","log","fired","hit","direction"],"mappings":"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","sourcesContent":["export function AI(playerState) {\r\n    var pos\r\n    var max = 0\r\n    var max_position\r\n    var table = document.getElementById('gurumi')\r\n    var cells = table.getElementsByClassName('image1')\r\n    /*\r\n    // Randomly pick a cell\r\n    do {\r\n        pos = Math.floor(Math.random() * 100)\r\n    } while (playerState.positions[pos].probability === '-1')\r\n    // Give a value\r\n    playerState.positions[pos].probability = 200\r\n    // Click highest\r\n    for(var i = 0; i < 100; i++) {\r\n        if (max < playerState.positions[i].probability) {\r\n            max = playerState.positions[i].probability\r\n            max_position = i\r\n        }\r\n    }\r\n    console.log(max_position)\r\n\r\n    if (max_position >= 0) {\r\n        cells[max_position].click()\r\n    }\r\n    // Calculate adjacent\r\n    calculateNextPos(playerState)\r\n    */\r\n\r\n    for(var i = 0; i < 100; i++) {\r\n        if (max < playerState.positions[i].probability) {\r\n            max = playerState.positions[i].probability\r\n            max_position = i\r\n        }\r\n    }\r\n\r\n    if(max === 0)\r\n    {\r\n        // Randomly pick a cell\r\n        do {\r\n            pos = Math.floor(Math.random() * 100)\r\n        } while (playerState.positions[pos].probability === '-1')\r\n        max_position = pos\r\n    }\r\n    \r\n    if(max_position >= 0) {\r\n        cells[max_position].click()\r\n    }\r\n\r\n    calculateNextPos(playerState)\r\n}\r\n\r\nfunction calculateNextPos(playerState) {\r\n    var randomness = 2\r\n    var directions = { 'w': null, 'n': null, 'e': null, 's': null };\r\n\r\n    console.log(\"In a func\")\r\n    for (var i = 0; i < 100; i++) {\r\n        if(playerState.positions[i].fired) {\r\n            console.log(\"In a 'fired'\", i)\r\n            console.log(playerState.positions[i].hit, playerState.positions[i].probability)\r\n            if(playerState.positions[i].hit && playerState.positions[i].probability !== -1) {\r\n                console.log(\"In a 'sunk'\", i)\r\n                for(var direction in directions){\r\n                    playerState.positions[i][direction].probability += 50 * Math.floor(Math.random() * randomness)\r\n                    if(playerState.positions[i][direction][direction] !== null) {\r\n                        playerState.positions[i][direction][direction].probability += 25 * Math.floor(Math.random() * randomness)\r\n                    }\r\n                }\r\n            }\r\n            // Give -1 \r\n            playerState.positions[i].probability = -1\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}