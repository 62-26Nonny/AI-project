{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gurum\\\\Documents\\\\AI project\\\\battleship\\\\src\\\\components\\\\Table.js\",\n    _s = $RefreshSig$();\n\nimport Image from './Image';\nimport Container from 'react-bootstrap/Container';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Table = props => {\n  _s();\n\n  const player = Object.freeze({\n    name: props.player,\n    ship: [],\n    founded: 0\n  });\n  const [playerState, setPlayerState] = useState(player);\n  var gameover = false;\n\n  function getRandomInt(min, max) {\n    const minimum = Math.ceil(min);\n    const maximum = Math.floor(max);\n    return Math.floor(Math.random() * (maximum - minimum + 1)) + minimum;\n  }\n\n  function randomShip(min, max, excludeArrayNumbers) {\n    let randomNumber;\n\n    if (!Array.isArray(excludeArrayNumbers)) {\n      randomNumber = getRandomInt(min, max);\n      return randomNumber;\n    }\n\n    do {\n      randomNumber = getRandomInt(min, max);\n    } while ((excludeArrayNumbers || []).includes(randomNumber));\n\n    return randomNumber;\n  }\n\n  function play(e) {\n    checkShip(player, e);\n\n    if (gameover) {\n      end(props.player);\n    }\n  }\n\n  function checkShip(player, e) {\n    if (player.ship.includes(e.target.id)) {\n      player.founded = player.founded + 1;\n      player.point.innerHTML = 'Founded ship: ' + player.founded;\n\n      if (player.founded === 10) {\n        gameover = true;\n      }\n\n      foundShip(player, e);\n    } else {\n      notFound(player, e);\n    }\n  }\n\n  function notFound(player, e) {\n    console.log(player.name + ': nothing here...');\n    e.target.src = 'https://tmsvalue.co.uk/wp-content/uploads/2017/03/Square-500x500-red.png';\n  }\n\n  function foundShip(player, e) {\n    console.log(player.name + ': FOUND SHIP!!!');\n    e.target.src = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR9qcrQeLufxv61jZ194tG5CJvux0p4U4-r2g&usqp=CAU';\n  }\n\n  function end(player) {\n    console.log(player + 'WIN!!!');\n  }\n\n  function generateShip() {\n    for (let i = 0; i < 10; i++) {\n      setPlayerState({ ...playerState,\n        ship: player.ship.push(randomShip(0, 24, player.ship))\n      });\n      console.log(player.ship);\n    }\n  }\n\n  useEffect(() => {\n    generateShip();\n  }, [setPlayerState]);\n\n  const createCell = (index, src) => {\n    return /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"cell\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        id: index,\n        src: src,\n        onClick: play\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.player\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: Array.from({\n        length: 10\n      }).map((_, row) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Array.from({\n            length: 10\n          }).map((_, col) => {\n            var index = (10 - row - 1) * 10 + (10 - col);\n            var src = 'map/' + index + '.jpg';\n            return createCell(index, src);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Table, \"KzrVYW86ABp7zLDQcs4XITTa6AA=\");\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/gurum/Documents/AI project/battleship/src/components/Table.js"],"names":["Image","Container","useEffect","useState","Table","props","player","Object","freeze","name","ship","founded","playerState","setPlayerState","gameover","getRandomInt","min","max","minimum","Math","ceil","maximum","floor","random","randomShip","excludeArrayNumbers","randomNumber","Array","isArray","includes","play","e","checkShip","end","target","id","point","innerHTML","foundShip","notFound","console","log","src","generateShip","i","push","createCell","index","from","length","map","_","row","col"],"mappings":"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","sourcesContent":["import Image from './Image'\r\nimport Container from 'react-bootstrap/Container'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst Table = (props) => {\r\n\r\n    const player = Object.freeze({\r\n        name: props.player,\r\n        ship: [],\r\n        founded: 0,\r\n    })\r\n    const [playerState, setPlayerState] = useState(player)\r\n\r\n    var gameover = false\r\n\r\n    function getRandomInt(min, max) {\r\n        const minimum = Math.ceil(min);\r\n        const maximum = Math.floor(max);\r\n     \r\n        return Math.floor(Math.random() * (maximum - minimum + 1)) + minimum;\r\n     }\r\n    \r\n    function randomShip(min, max, excludeArrayNumbers) {\r\n        let randomNumber;\r\n      \r\n        if(!Array.isArray(excludeArrayNumbers)) {\r\n          randomNumber = getRandomInt(min, max);\r\n          return randomNumber;\r\n        }\r\n      \r\n        do {\r\n          randomNumber = getRandomInt(min, max);\r\n        } while ((excludeArrayNumbers || []).includes(randomNumber));\r\n      \r\n        return randomNumber;\r\n    }\r\n\r\n    function play(e) {\r\n        checkShip(player, e)\r\n        \r\n        if(gameover){\r\n            end(props.player)\r\n        }\r\n    }\r\n\r\n    function checkShip(player, e) {\r\n        if(player.ship.includes(e.target.id)){\r\n            player.founded = player.founded + 1\r\n            player.point.innerHTML = 'Founded ship: ' + player.founded\r\n            if(player.founded === 10) {\r\n                gameover = true\r\n            }\r\n            foundShip(player, e)\r\n        }\r\n        else {\r\n            notFound(player, e)\r\n        }\r\n    }\r\n\r\n    function notFound(player, e) {\r\n        console.log(player.name + ': nothing here...')\r\n        e.target.src = 'https://tmsvalue.co.uk/wp-content/uploads/2017/03/Square-500x500-red.png'\r\n    }\r\n    \r\n    function foundShip(player, e) {\r\n        console.log(player.name + ': FOUND SHIP!!!')\r\n        e.target.src = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR9qcrQeLufxv61jZ194tG5CJvux0p4U4-r2g&usqp=CAU'\r\n    }\r\n    \r\n    function end(player) {\r\n        console.log(player + 'WIN!!!')\r\n    }\r\n\r\n    function generateShip() {\r\n        for(let i = 0;i < 10;i++){\r\n            setPlayerState({\r\n                ...playerState,\r\n                ship: player.ship.push(randomShip(0, 24, player.ship))\r\n            })\r\n            console.log(player.ship)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        generateShip()\r\n    }, [setPlayerState])\r\n\r\n    const createCell = (index, src) => {\r\n        return(\r\n            <td key={index} className='cell'>\r\n                <img id={index} src={src} onClick={play} />\r\n            </td>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h2>{props.player}</h2>\r\n            <table>\r\n                {Array.from({ length: 10 }).map((_, row) => {\r\n                    return (\r\n                        <tr>\r\n                            {Array.from({ length: 10 }).map((_, col) => {\r\n                                var index = ((10 - row - 1) * 10) + (10 - col)\r\n                                var src = 'map/' + index + '.jpg'\r\n                                return(\r\n                                    createCell(index, src)\r\n                                )\r\n                                \r\n                            })}\r\n                        </tr>\r\n                    )\r\n                })}\r\n            </table>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Table\r\n"]},"metadata":{},"sourceType":"module"}