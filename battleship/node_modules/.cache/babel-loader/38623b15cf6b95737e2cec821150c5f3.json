{"ast":null,"code":"export function AI(playerState) {\n  var max_position;\n  var table = document.getElementById('gurumi');\n  var cells = table.getElementsByClassName('image1'); // Randomly pick a cell\n\n  do {\n    pos = Math.floor(Math.random() * 100);\n  } while (playerState.positions[pos].probablity === '-1'); // Give a value\n\n\n  playerState.positions[pos].probablity = 100; // Click highest\n\n  for (var i = 0; i < 100; i++) {\n    if (max < playerState.positions[i].probability) {\n      max = playerState.positions[i].probability;\n      max_position = i;\n    }\n  }\n\n  if (max_position) {\n    cells[max_position].click();\n  } // Calculate adjacent\n\n\n  calculateNextPos(playerState);\n}\n_c = AI;\n\nfunction calculateNextPos(playerState) {\n  var randomness = 2;\n\n  for (var i = 0; i < 100; i++) {\n    if (playerState.positions[i].fired) {\n      if (playerState.positions[i].sunk && playerState.positions[i].probability !== -1) {\n        for (var direction in directions) {\n          playerState.positions[i][direction].probability += 50 * Math.floor(Math.random() * randomness);\n\n          if (playerState.positions[i][direction][direction] !== null) {\n            playerState.positions[i][direction][direction].probability += 25 * Math.floor(Math.random() * randomness);\n          }\n        }\n      } // Give -1 \n\n\n      playerState.positions[i].probability = -1;\n    }\n  }\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AI\");","map":{"version":3,"sources":["F:/Code/Project/AI-project/battleship/src/AI/AI_team2.js"],"names":["AI","playerState","max_position","table","document","getElementById","cells","getElementsByClassName","pos","Math","floor","random","positions","probablity","i","max","probability","click","calculateNextPos","randomness","fired","sunk","direction","directions"],"mappings":"AAAA,OAAO,SAASA,EAAT,CAAYC,WAAZ,EAAyB;AAC5B,MAAIC,YAAJ;AAEA,MAAIC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAZ;AACA,MAAIC,KAAK,GAAGH,KAAK,CAACI,sBAAN,CAA6B,QAA7B,CAAZ,CAJ4B,CAM5B;;AACA,KAAG;AACCC,IAAAA,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAN;AACH,GAFD,QAESV,WAAW,CAACW,SAAZ,CAAsBJ,GAAtB,EAA2BK,UAA3B,KAA0C,IAFnD,EAP4B,CAU5B;;;AACAZ,EAAAA,WAAW,CAACW,SAAZ,CAAsBJ,GAAtB,EAA2BK,UAA3B,GAAwC,GAAxC,CAX4B,CAY5B;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,GAAnB,EAAwBA,CAAC,EAAzB,EAA6B;AACzB,QAAIC,GAAG,GAAGd,WAAW,CAACW,SAAZ,CAAsBE,CAAtB,EAAyBE,WAAnC,EAAgD;AAC5CD,MAAAA,GAAG,GAAGd,WAAW,CAACW,SAAZ,CAAsBE,CAAtB,EAAyBE,WAA/B;AACAd,MAAAA,YAAY,GAAGY,CAAf;AACH;AACJ;;AACD,MAAIZ,YAAJ,EAAkB;AACdI,IAAAA,KAAK,CAACJ,YAAD,CAAL,CAAoBe,KAApB;AACH,GArB2B,CAsB5B;;;AACAC,EAAAA,gBAAgB,CAACjB,WAAD,CAAhB;AACH;KAxBeD,E;;AA0BhB,SAASkB,gBAAT,CAA0BjB,WAA1B,EAAuC;AACnC,MAAIkB,UAAU,GAAG,CAAjB;;AACA,OAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1B,QAAGb,WAAW,CAACW,SAAZ,CAAsBE,CAAtB,EAAyBM,KAA5B,EAAmC;AAC/B,UAAGnB,WAAW,CAACW,SAAZ,CAAsBE,CAAtB,EAAyBO,IAAzB,IAAiCpB,WAAW,CAACW,SAAZ,CAAsBE,CAAtB,EAAyBE,WAAzB,KAAyC,CAAC,CAA9E,EAAiF;AAC7E,aAAI,IAAIM,SAAR,IAAqBC,UAArB,EAAgC;AAC5BtB,UAAAA,WAAW,CAACW,SAAZ,CAAsBE,CAAtB,EAAyBQ,SAAzB,EAAoCN,WAApC,IAAmD,KAAKP,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBQ,UAA3B,CAAxD;;AACA,cAAGlB,WAAW,CAACW,SAAZ,CAAsBE,CAAtB,EAAyBQ,SAAzB,EAAoCA,SAApC,MAAmD,IAAtD,EAA4D;AACxDrB,YAAAA,WAAW,CAACW,SAAZ,CAAsBE,CAAtB,EAAyBQ,SAAzB,EAAoCA,SAApC,EAA+CN,WAA/C,IAA8D,KAAKP,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBQ,UAA3B,CAAnE;AACH;AACJ;AACJ,OAR8B,CAS/B;;;AACAlB,MAAAA,WAAW,CAACW,SAAZ,CAAsBE,CAAtB,EAAyBE,WAAzB,GAAuC,CAAC,CAAxC;AACH;AACJ;AACJ","sourcesContent":["export function AI(playerState) {\r\n    var max_position\r\n\r\n    var table = document.getElementById('gurumi')\r\n    var cells = table.getElementsByClassName('image1')\r\n    \r\n    // Randomly pick a cell\r\n    do {\r\n        pos = Math.floor(Math.random() * 100)\r\n    } while (playerState.positions[pos].probablity === '-1');\r\n    // Give a value\r\n    playerState.positions[pos].probablity = 100\r\n    // Click highest\r\n    for(var i = 0; i < 100; i++) {\r\n        if (max < playerState.positions[i].probability) {\r\n            max = playerState.positions[i].probability\r\n            max_position = i\r\n        }\r\n    }\r\n    if (max_position) {\r\n        cells[max_position].click()\r\n    }\r\n    // Calculate adjacent\r\n    calculateNextPos(playerState)\r\n}\r\n\r\nfunction calculateNextPos(playerState) {\r\n    var randomness = 2\r\n    for (var i = 0; i < 100; i++) {\r\n        if(playerState.positions[i].fired) {\r\n            if(playerState.positions[i].sunk && playerState.positions[i].probability !== -1) {\r\n                for(var direction in directions){\r\n                    playerState.positions[i][direction].probability += 50 * Math.floor(Math.random() * randomness)\r\n                    if(playerState.positions[i][direction][direction] !== null) {\r\n                        playerState.positions[i][direction][direction].probability += 25 * Math.floor(Math.random() * randomness)\r\n                    }\r\n                }\r\n            }\r\n            // Give -1 \r\n            playerState.positions[i].probability = -1\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}