{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gurum\\\\Documents\\\\AI project\\\\battleship\\\\src\\\\components\\\\Table.js\",\n    _s = $RefreshSig$();\n\nimport Container from 'react-bootstrap/Container';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Table = props => {\n  _s();\n\n  //สร้างรูปแบบ state ของ player\n  const player = Object.freeze({\n    name: props.player,\n    ship: Array.from([]),\n    position: Array.from([]),\n    founded: 0\n  }); //สร้าง plyer state โดยใช้รูปแบบ player\n\n  const [playerState, setPlayerState] = useState(player);\n  /* O คือเรือที่วางแล้ว*/\n\n  let boardn  var gameover = false; // ฟังก์ชั่นสุ่มเลขโดยรับค่า min max\n\n  function getRandomInt(min, max) {\n    const minimum = Math.ceil(min);\n    const maximum = Math.floor(max);\n    return Math.floor(Math.random() * (maximum - minimum + 1)) + minimum;\n  } // ฟังก์ชั่นสุ่มตำแหน่งหัวเรือโดยรับ min max และ arrayไว้เก็บตำแหน่งเรือ\n\n\n  function randomShip(min, max, excludeArrayNumbers) {\n    let randomNumber; // เช็คว่า excludeArrayNumbers เป็น array หรือไม่???\n\n    if (!Array.isArray(excludeArrayNumbers)) {\n      randomNumber = getRandomInt(min, max);\n      return randomNumber;\n    } // ให้สุ่มตำแหน่งหัวเรือเรื่อยๆ จนกว่าตำแหน่งที่ได้ไม่ซ้ำกับตำแหน่งที่มี หรือเมื่อเป็น array ว่าง\n\n\n    do {\n      randomNumber = getRandomInt(min, max);\n    } while ((excludeArrayNumbers || []).includes(randomNumber));\n\n    return randomNumber;\n  } // ฟั่งชั่นที่ทำงานเมื่อผู้เล่นกดช่องตาราง \n\n\n  function play(e) {\n    //เช็คว่ามีเรือรึเปล่า\n    var found = checkShip(e); // เมื่อเจอเรือให้บวกแต้มฝั่งผู้เล่นที่เจอ\n\n    if (found) {\n      foundShip(e);\n      setPlayerState({ ...playerState,\n        founded: playerState.founded + 1\n      }); // เมื่อแต้มครบ จบเกม\n\n      if (playerState.founded === 10) {\n        gameover = true;\n      }\n    } else {\n      notFound(e);\n    } //เช็คว่าเกมจบรึยัง\n\n\n    if (gameover) {\n      //เมื่อจบแล้วไปแสดงหน้าจบเกม\n      end();\n    }\n  } // ฟังก์ชั่นสุ่มสำหรับเซ็กว่าผู้เล่นยิงโดนเรือตรงข้ามหรือไม่\n\n\n  function checkShip(e) {\n    // ให้ตัวแปล clicked เก็บตำแหน่งที่ผู้เล่นกด\n    var clicked = [parseInt(e.target.id[0]), parseInt(e.target.id[2])];\n    console.log(clicked); // ให้ตัวแปล found เก็บค่า boolean ว่าเจอเรือหรือไม่\n\n    var found = playerState.ship.find(ship => {\n      if (ship[0] === clicked[0] && ship[1] === clicked[1]) {\n        return true;\n      } else return false;\n    }); // เช็คว่าเจอเรือไหม (เรือ: \"O\")\n\n    if (board[clicked[0]][clicked[1]] === \"O\") {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  function notFound(e) {\n    console.log(playerState.name + ': nothing here...');\n    e.target.src = 'https://tmsvalue.co.uk/wp-content/uploads/2017/03/Square-500x500-red.png';\n  }\n\n  function foundShip(e) {\n    console.log(playerState.name + ': FOUND SHIP!!!');\n    e.target.src = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR9qcrQeLufxv61jZ194tG5CJvux0p4U4-r2g&usqp=CAU';\n  }\n\n  function end() {\n    console.log(playerState.name + 'WIN!!!');\n  }\n  /* ต้องลงได้ทั้ง 4 ทิศ ถึงจะผ่าน */\n\n\n  function placeable(head, length, board) {\n    try {\n      for (let axis = 0; axis < 2; axis++) {\n        for (let i = head[axis] - (length - 1); i < head[axis] + (length - 1); i++) {\n          let temp;\n          if (axis === 0) temp = board[i][head[1]];else temp = board[head[0]][i];\n\n          if (temp === '-') {\n            continue;\n          } else {\n            /* ถ้าวางไม่ได้ ยกเลิกทันที */\n            return false;\n          }\n        }\n      }\n\n      return true;\n    } catch (TypeError) {\n      /* โค้ดไม่ได้แยกแยะเรื่องหลุดแมพ ทำให้ TypeError ถ้าเลือกขอบแมพแล้วขนาดยาวจนเกิน Board (เกิน Length array ของ board) ซึ่งถ้าเป็นแบบนี้มันลงไม่ได้อยู่แล้ว return false ไปเลย*/\n      return false;\n    }\n  }\n  /* Algo's test case\r\n  let prow1 = [1, 10]\r\n  let prow2 = [4, 6]\r\n  let prow3 = [8, 3]\r\n  */\n\n  /* Algo's test case\r\n  let isPlaceable1 = placeable(prow1, shipLength, board)\r\n  let isPlaceable2 = placeable(prow2, shipLength, board)\r\n  let isPlaceable3 = placeable(prow3, shipLength, board)\r\n  console.log(\"Map's edge case : \", isPlaceable1)\r\n  console.log(\"Board occupied case (By other ship) : \", isPlaceable2)\r\n  console.log(\"No case : \", isPlaceable3)\r\n  */\n\n\n  function generateShip(shipLength) {\n    let prow = [];\n    let isPlaceable;\n\n    do {\n      for (let axis = 0; axis < 2; axis++) {\n        prow[axis] = getRandomInt(0, 10);\n      }\n\n      isPlaceable = placeable(prow, shipLength, board);\n    } while (!isPlaceable);\n\n    board[prow[0]][prow[1]] = 'O';\n    /* วางเรือ แบบสุ่มทิศ */\n\n    switch (getRandomInt(1, 4)) {\n      case 1:\n        for (let i = prow[1] - (shipLength - 1); i < prow[1]; i++) {\n          board[prow[0]][i] = 'O';\n        }\n\n        break;\n\n      case 2:\n        for (let i = prow[1]; i < prow[1] + shipLength; i++) {\n          board[prow[0]][i] = 'O';\n        }\n\n        break;\n\n      case 3:\n        for (let i = prow[0] - (shipLength - 1); i < prow[0]; i++) {\n          board[i][prow[1]] = 'O';\n        }\n\n        break;\n\n      case 4:\n        for (let i = prow[0]; i < prow[0] + shipLength; i++) {\n          board[i][prow[1]] = 'O';\n        }\n\n        break;\n    }\n\n    console.log(board);\n  }\n\n  useEffect(() => {\n    generateShip(2);\n    generateShip(3);\n    generateShip(5);\n  }, [setPlayerState]); // สร้างตารางโดยรับค่า id และ src\n\n  const createCell = (id, src) => {\n    // ถ้าเป็นแถวแรกให้สร้าง header ระบุเลขช่องด้วยนอกจากนั้นก็สร้างแค่ช่องปกติ\n    if (id[0] === 0) {\n      return /*#__PURE__*/_jsxDEV(\"th\", {\n        children: [id[1] + 1, /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"cell\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            id: id,\n            src: src,\n            onClick: play\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"cell\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        id: id,\n        src: src,\n        onClick: play\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.player\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: Array.from({\n        length: 10\n      }).map((_, row) => {\n        var ascii = 65;\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: String.fromCharCode(ascii + row)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 29\n          }, this), Array.from({\n            length: 10\n          }).map((_, col) => {\n            var index = (10 - row - 1) * 10 + (10 - col);\n            var id = [row, col];\n            var src = 'map/' + index + '.jpg';\n            return createCell(id, src);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Table, \"KzrVYW86ABp7zLDQcs4XITTa6AA=\");\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/gurum/Documents/AI project/battleship/src/components/Table.js"],"names":["Container","useEffect","useState","Table","props","player","Object","freeze","name","ship","Array","from","position","founded","playerState","setPlayerState","board","gameover","getRandomInt","min","max","minimum","Math","ceil","maximum","floor","random","randomShip","excludeArrayNumbers","randomNumber","isArray","includes","play","e","found","checkShip","foundShip","notFound","end","clicked","parseInt","target","id","console","log","find","src","placeable","head","length","axis","i","temp","TypeError","generateShip","shipLength","prow","isPlaceable","createCell","map","_","row","ascii","String","fromCharCode","col","index"],"mappings":"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","sourcesContent":["import Container from 'react-bootstrap/Container'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst Table = (props) => {\r\n\r\n    //สร้างรูปแบบ state ของ player\r\n    const player = Object.freeze({\r\n        name: props.player,\r\n        ship: Array.from([]),\r\n        position: Array.from([]),\r\n        founded: 0,\r\n    })\r\n\r\n    //สร้าง plyer state โดยใช้รูปแบบ player\r\n    const [playerState, setPlayerState] = useState(player)\r\n\r\n    /* O คือเรือที่วางแล้ว*/\r\n    let board = [\r\n        ['X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X'],\r\n        ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n        ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n        ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n        ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n        ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n        ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n        ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n        ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n        ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n        ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n        ['X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X']\r\n    ]\r\n\r\n    var gameover = false\r\n\r\n    // ฟังก์ชั่นสุ่มเลขโดยรับค่า min max\r\n    function getRandomInt(min, max) {\r\n        const minimum = Math.ceil(min);\r\n        const maximum = Math.floor(max);\r\n\r\n        return Math.floor(Math.random() * (maximum - minimum + 1)) + minimum;\r\n    }\r\n\r\n    // ฟังก์ชั่นสุ่มตำแหน่งหัวเรือโดยรับ min max และ arrayไว้เก็บตำแหน่งเรือ\r\n    function randomShip(min, max, excludeArrayNumbers) {\r\n        let randomNumber;\r\n\r\n        // เช็คว่า excludeArrayNumbers เป็น array หรือไม่???\r\n        if (!Array.isArray(excludeArrayNumbers)) {\r\n            randomNumber = getRandomInt(min, max);\r\n            return randomNumber;\r\n        }\r\n\r\n        // ให้สุ่มตำแหน่งหัวเรือเรื่อยๆ จนกว่าตำแหน่งที่ได้ไม่ซ้ำกับตำแหน่งที่มี หรือเมื่อเป็น array ว่าง\r\n        do {\r\n            randomNumber = getRandomInt(min, max);\r\n        } while ((excludeArrayNumbers || []).includes(randomNumber));\r\n\r\n        return randomNumber;\r\n    }\r\n\r\n    // ฟั่งชั่นที่ทำงานเมื่อผู้เล่นกดช่องตาราง \r\n    function play(e) {\r\n        //เช็คว่ามีเรือรึเปล่า\r\n        var found = checkShip(e)\r\n\r\n        // เมื่อเจอเรือให้บวกแต้มฝั่งผู้เล่นที่เจอ\r\n        if (found) {\r\n            foundShip(e)\r\n            setPlayerState({\r\n                ...playerState,\r\n                founded: playerState.founded + 1\r\n            })\r\n            // เมื่อแต้มครบ จบเกม\r\n            if (playerState.founded === 10) {\r\n                gameover = true\r\n            }\r\n        }\r\n        else {\r\n            notFound(e)\r\n        }\r\n\r\n        //เช็คว่าเกมจบรึยัง\r\n        if (gameover) {\r\n            //เมื่อจบแล้วไปแสดงหน้าจบเกม\r\n            end()\r\n        }\r\n    }\r\n\r\n    // ฟังก์ชั่นสุ่มสำหรับเซ็กว่าผู้เล่นยิงโดนเรือตรงข้ามหรือไม่\r\n    function checkShip(e) {\r\n        // ให้ตัวแปล clicked เก็บตำแหน่งที่ผู้เล่นกด\r\n        var clicked = [parseInt(e.target.id[0]), parseInt(e.target.id[2])]\r\n        console.log(clicked)\r\n        \r\n        // ให้ตัวแปล found เก็บค่า boolean ว่าเจอเรือหรือไม่\r\n        var found = playerState.ship.find(ship => {\r\n            if ((ship[0] === clicked[0]) && (ship[1] === clicked[1])) {\r\n                return true\r\n            }\r\n            else return false\r\n        })\r\n\r\n        // เช็คว่าเจอเรือไหม (เรือ: \"O\")\r\n        if(board[clicked[0]][clicked[1]] === \"O\"){\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    function notFound(e) {\r\n        console.log(playerState.name + ': nothing here...')\r\n        e.target.src = 'https://tmsvalue.co.uk/wp-content/uploads/2017/03/Square-500x500-red.png'\r\n    }\r\n\r\n    function foundShip(e) {\r\n        console.log(playerState.name + ': FOUND SHIP!!!')\r\n        e.target.src = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR9qcrQeLufxv61jZ194tG5CJvux0p4U4-r2g&usqp=CAU'\r\n    }\r\n\r\n    function end() {\r\n        console.log(playerState.name + 'WIN!!!')\r\n    }\r\n\r\n    /* ต้องลงได้ทั้ง 4 ทิศ ถึงจะผ่าน */\r\n    function placeable(head, length, board) {\r\n        try {\r\n            for (let axis = 0; axis < 2; axis++) {\r\n                for (let i = head[axis] - (length - 1); i < head[axis] + (length - 1); i++) {\r\n                    let temp\r\n                    if (axis === 0)\r\n                        temp = board[i][head[1]]\r\n                    else\r\n                        temp = board[head[0]][i]\r\n\r\n                    if (temp === '-') {\r\n                        continue\r\n                    }\r\n                    else {\r\n                        /* ถ้าวางไม่ได้ ยกเลิกทันที */\r\n                        return false\r\n                    }\r\n                }\r\n            }\r\n            return true\r\n        } catch (TypeError) {\r\n            /* โค้ดไม่ได้แยกแยะเรื่องหลุดแมพ ทำให้ TypeError ถ้าเลือกขอบแมพแล้วขนาดยาวจนเกิน Board (เกิน Length array ของ board) ซึ่งถ้าเป็นแบบนี้มันลงไม่ได้อยู่แล้ว return false ไปเลย*/\r\n            return false\r\n        }\r\n    }\r\n\r\n    /* Algo's test case\r\n    let prow1 = [1, 10]\r\n    let prow2 = [4, 6]\r\n    let prow3 = [8, 3]\r\n    */\r\n\r\n    /* Algo's test case\r\n    let isPlaceable1 = placeable(prow1, shipLength, board)\r\n    let isPlaceable2 = placeable(prow2, shipLength, board)\r\n    let isPlaceable3 = placeable(prow3, shipLength, board)\r\n    console.log(\"Map's edge case : \", isPlaceable1)\r\n    console.log(\"Board occupied case (By other ship) : \", isPlaceable2)\r\n    console.log(\"No case : \", isPlaceable3)\r\n    */\r\n\r\n    function generateShip(shipLength) {\r\n        let prow = []\r\n        let isPlaceable\r\n\r\n        do {\r\n            for (let axis = 0; axis < 2; axis++) {\r\n                prow[axis] = getRandomInt(0, 10)\r\n            }\r\n            isPlaceable = placeable(prow, shipLength, board)\r\n        } while (!isPlaceable)\r\n\r\n        board[prow[0]][prow[1]] = 'O'\r\n        /* วางเรือ แบบสุ่มทิศ */\r\n        switch (getRandomInt(1, 4)) {\r\n            case 1:\r\n                for (let i = prow[1] - (shipLength - 1); i < prow[1]; i++) {\r\n                    board[prow[0]][i] = 'O';\r\n                }\r\n                break;\r\n            case 2:\r\n                for (let i = prow[1]; i < prow[1] + shipLength; i++) {\r\n                    board[prow[0]][i] = 'O';\r\n                }\r\n                break;\r\n            case 3:\r\n                for (let i = prow[0] - (shipLength - 1); i < prow[0]; i++) {\r\n                    board[i][prow[1]] = 'O';\r\n                }\r\n                break;\r\n            case 4:\r\n                for (let i = prow[0]; i < prow[0] + shipLength; i++) {\r\n                    board[i][prow[1]] = 'O';\r\n                }\r\n                break;\r\n        }\r\n\r\n        console.log(board)\r\n    }\r\n\r\n    useEffect(() => {\r\n        generateShip(2)\r\n        generateShip(3)\r\n        generateShip(5)\r\n    }, [setPlayerState])\r\n\r\n    // สร้างตารางโดยรับค่า id และ src\r\n    const createCell = (id, src) => {\r\n\r\n        // ถ้าเป็นแถวแรกให้สร้าง header ระบุเลขช่องด้วยนอกจากนั้นก็สร้างแค่ช่องปกติ\r\n        if (id[0] === 0) {\r\n            return (\r\n                <th>\r\n                    {id[1] + 1}\r\n                    <td className='cell'>\r\n                        <img id={id} src={src} onClick={play} />\r\n                    </td>\r\n                </th>\r\n            )\r\n        }\r\n        return (\r\n            <td className='cell'>\r\n                <img id={id} src={src} onClick={play} />\r\n            </td>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h2>{props.player}</h2>\r\n            <table>\r\n\r\n                {Array.from({ length: 10 }).map((_, row) => {\r\n\r\n                    var ascii = 65\r\n                    return (\r\n                        <tr>\r\n                            <th>\r\n                                {String.fromCharCode(ascii + row)}\r\n                            </th>\r\n                            {Array.from({ length: 10 }).map((_, col) => {\r\n                                var index = ((10 - row - 1) * 10) + (10 - col)\r\n                                var id = [row, col]\r\n                                var src = 'map/' + index + '.jpg'\r\n                                return (\r\n                                    createCell(id, src)\r\n                                )\r\n\r\n                            })}\r\n                        </tr>\r\n                    )\r\n                })}\r\n            </table>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Table\r\n"]},"metadata":{},"sourceType":"module"}