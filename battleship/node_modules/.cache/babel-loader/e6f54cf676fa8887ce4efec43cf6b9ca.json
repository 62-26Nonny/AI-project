{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gurum\\\\Documents\\\\AI project\\\\battleship\\\\src\\\\components\\\\Table.js\",\n    _s = $RefreshSig$();\n\nimport { Container, Button } from 'react-bootstrap';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Table = props => {\n  _s();\n\n  const randomness = 3;\n  var positions = [];\n\n  for (var i = 0; i < 100; i++) {\n    var row = Math.floor(i / 10);\n    var col = i % 10;\n    positions[i] = {\n      index: i,\n      probability: 0,\n      occupied: false,\n      fired: false,\n      hit: false,\n      sunk: false,\n      row: row,\n      col: col\n    };\n  }\n\n  for (var i = 0; i < 100; i++) {\n    positions[i].w = positions[i - 1] && positions[i - 1].row === positions[i].row ? positions[i - 1] : null;\n    positions[i].e = positions[i + 1] && positions[i + 1].row === positions[i].row ? positions[i + 1] : null;\n    positions[i].n = positions[i - 10] ? positions[i - 10] : null;\n    positions[i].s = positions[i + 10] ? positions[i + 10] : null;\n  } //สร้างรูปแบบ state ของ player\n\n\n  const player = Object.freeze({\n    name: props.player,\n    boardn    positions: Array.from(positions),\n    founded: 0,\n    ships: {\n      'patrolship': {\n        alive: true,\n        length: 2\n      },\n      'submarine': {\n        alive: true,\n        length: 3\n      },\n      'destroyer': {\n        alive: true,\n        length: 3\n      },\n      'battleship': {\n        alive: true,\n        length: 4\n      },\n      'aircraft-carrier': {\n        alive: true,\n        length: 5\n      }\n    }\n  }); //สร้าง plyer state โดยใช้รูปแบบ player\n\n  const [playerState, setPlayerState] = useState(player);\n\n  function tryShip(ship, position, direction) {\n    var check_position = playerState.positions[position];\n    var flag = true;\n\n    for (var i = 1; i <= ship.length; i++) {\n      if (!check_position || check_position.fired) {\n        flag = false;\n        break;\n      }\n\n      check_position = check_position[direction];\n    }\n\n    return flag;\n  }\n\n  function calculateDensity() {\n    var current_position;\n    var directions = {\n      'w': null,\n      'n': null,\n      'e': null,\n      's': null\n    };\n\n    for (var i = 0; i < 100; i++) {\n      playerState.positions[i].probability = 0;\n    }\n\n    for (var shipName in playerState.ships) {\n      var ship = playerState.ships[shipName];\n\n      if (ship.alive) {\n        for (var i = 0; i < 100; i++) {\n          if (tryShip(ship, i, 'e')) {\n            current_position = playerState.positions[i];\n\n            for (var j = 0; j < ship.length; j++) {\n              current_position.probability++;\n              current_position = current_position['e'];\n            }\n          }\n\n          if (tryShip(ship, i, 's')) {\n            current_position = playerState.positions[i];\n\n            for (var j = 0; j < ship.length; j++) {\n              current_position.probability++;\n              current_position = current_position['s'];\n            }\n          }\n        }\n      }\n    }\n\n    for (var i = 0; i < 100; i++) {\n      if (playerState.positions[i].probability > 0) {\n        playerState.positions[i].probability += Math.floor(Math.random() * randomness);\n      }\n\n      if (playerState.positions[i].fired) {\n        if (playerState.positions[i].hit && !playerState.positions[i].sunk) {\n          for (var direction in directions) {\n            var hitStreak = 1;\n            var checked_position = playerState.positions[i];\n\n            while (checked_position[direction] && checked_position[direction].hit && !checked_position[direction].confirmed) {\n              hitStreak++;\n              checked_position = checked_position[direction];\n            }\n\n            checked_position = checked_position[direction];\n\n            if (checked_position && !checked_position.fired) {\n              checked_position.probability += hitStreak * 10;\n            }\n          }\n        }\n\n        playerState.positions[i].probability = -1;\n      }\n    }\n  }\n\n  calculateDensity();\n  console.log(\"After re-cal \");\n  console.table(playerState.positions);\n  var gameover = false; // ฟังก์ชั่นสุ่มเลขโดยรับค่า min max\n\n  function getRandomInt(min, max) {\n    const minimum = Math.ceil(min);\n    const maximum = Math.floor(max);\n    return Math.floor(Math.random() * (maximum - minimum + 1)) + minimum;\n  } // ฟั่งชั่นที่ทำงานเมื่อผู้เล่นกดช่องตาราง \n\n\n  function play(e) {\n    //เช็คว่ามีเรือรึเปล่า\n    var found = checkShip(e); // เมื่อเจอเรือให้บวกแต้มฝั่งผู้เล่นที่เจอ\n\n    if (found) {\n      foundShip(e);\n      setPlayerState({ ...playerState,\n        founded: playerState.founded + 1\n      }); // เมื่อแต้มครบ จบเกม\n\n      if (playerState.founded === 10) {\n        gameover = true;\n      }\n    } else {\n      notFound(e);\n    } //เช็คว่าเกมจบรึยัง\n\n\n    if (gameover) {\n      //เมื่อจบแล้วไปแสดงหน้าจบเกม\n      end();\n    }\n  } // ฟังก์ชั่นสุ่มสำหรับเซ็กว่าผู้เล่นยิงโดนเรือตรงข้ามหรือไม่\n\n\n  function checkShip(e) {\n    // ให้ตัวแปล clicked เก็บตำแหน่งที่ผู้เล่นกด\n    var clicked = [parseInt(e.target.id[0]), parseInt(e.target.id[2])];\n    console.log(\"Clicked at \" + clicked); // เช็คว่าเจอเรือไหม (เรือ: \"O\")\n\n    if (!(playerState.board[clicked[0] + 1][clicked[1] + 1] === \"-\")) {\n      playerState.board[clicked[0] + 1][clicked[1] + 1] = \"x\";\n      console.log(\"Position at \" + playerState.positions[parseInt(e.target.id[0] + e.target.id[2])].index);\n      playerState.positions[parseInt(e.target.id[0] + e.target.id[2])].fired = true;\n      playerState.positions[parseInt(e.target.id[0] + e.target.id[2])].hit = true;\n      console.log('After hit');\n      console.table(playerState.positions);\n      calculateDensity();\n      var cells = document.getElementsByClassName(\"image2\");\n\n      for (var i = 0; i < 100; i++) {\n        cells[i].innerHTML = playerState.positions[i].probability;\n      }\n\n      return true;\n    } else {\n      playerState.positions[parseInt(e.target.id[0] + e.target.id[2])].fired = true;\n      console.log('After fired ');\n      console.table(positions);\n      calculateDensity();\n      var cells = document.getElementsByClassName(\"image2\");\n\n      for (var i = 0; i < 100; i++) {\n        cells[i].innerHTML = playerState.positions[i].probability;\n      }\n\n      return false;\n    }\n  }\n\n  function notFound(e) {\n    console.log(playerState.name + ': nothing here...');\n    e.target.src = 'https://tmsvalue.co.uk/wp-content/uploads/2017/03/Square-500x500-red.png';\n  }\n\n  function foundShip(e) {\n    var is_DD_Alive = true;\n\n    for (var i = 0; i < 12; i++) {\n      console.log(playerState.board[i]);\n\n      if (playerState.board[i].includes(\"DD\")) {\n        is_DD_Alive = true;\n        break;\n      } else is_DD_Alive = false;\n    }\n\n    console.log(playerState.name + ': FOUND SHIP!!!');\n\n    if (!is_DD_Alive) {\n      console.log('Destroyer Ship Sunk!');\n    } // if(!(part_id.includes(\"DD\"))){\n    //     console.log('Destroyer Ship Sunk!')\n    // }\n\n\n    e.target.src = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR9qcrQeLufxv61jZ194tG5CJvux0p4U4-r2g&usqp=CAU';\n    console.log(playerState.board);\n  }\n\n  function end() {\n    console.log(playerState.name + 'WIN!!!');\n  }\n  /* ต้องลงได้ทั้ง 4 ทิศ ถึงจะผ่าน */\n  // function placeable(head, length) {\n  //     try {\n  //         for (let axis = 0; axis < 2; axis++) {\n  //             for (let i = head[axis] - (length - 1); i < head[axis] + (length - 1); i++) {\n  //                 let temp\n  //                 if (axis === 0)\n  //                     temp = playerState.board[i][head[1]]\n  //                 else\n  //                     temp = playerState.board[head[0]][i]\n  //                 if (temp === '-') {\n  //                     continue\n  //                 }\n  //                 else {\n  //                     /* ถ้าวางไม่ได้ ยกเลิกทันที */\n  //                     return false\n  //                 }\n  //             }\n  //         }\n  //         return true\n  //     } catch (TypeError) {\n  //         /* โค้ดไม่ได้แยกแยะเรื่องหลุดแมพ ทำให้ TypeError ถ้าเลือกขอบแมพแล้วขนาดยาวจนเกิน Board (เกิน Length array ของ board) ซึ่งถ้าเป็นแบบนี้มันลงไม่ได้อยู่แล้ว return false ไปเลย*/\n  //         return false\n  //     }\n  // }\n\n\n  function placeShips() {\n    var index,\n        orientation,\n        validPosition = false,\n        lastPosition;\n\n    for (var ship in playerState.ships) {\n      while (!validPosition) {\n        index = getRandomPosition();\n        orientation = Math.random() * 2 > 1 ? 'e' : 's';\n\n        if (tryShip(playerState.ships[ship], index, orientation, 'occupied')) {\n          validPosition = true;\n        }\n      }\n\n      lastPosition = playerState.positions[index];\n\n      for (var i = 0; i < playerState.ships[ship].length; i++) {\n        lastPosition.occupied = true;\n        lastPosition = lastPosition[orientation];\n      }\n\n      playerState.ships[ship].position = index;\n      validPosition = false;\n    }\n  }\n\n  function getRandomPosition() {\n    return Math.floor(Math.random() * 100);\n  } // function generateShip(shipLength) {\n  //     let prow = []\n  //     let isPlaceable\n  //     do {\n  //         for (let axis = 0; axis < 2; axis++) {\n  //             prow[axis] = getRandomInt(0, 10)\n  //         }\n  //         isPlaceable = placeable(prow, shipLength)\n  //     } while (!isPlaceable)\n  //     playerState.board[prow[0]][prow[1]] = 'O'\n  //     /* วางเรือ แบบสุ่มทิศ */\n  //     switch (getRandomInt(1, 4)) {\n  //         case 1:\n  //             for (let i = prow[0]; i < prow[0] + shipLength; i++) {\n  //                 playerState.board[i][prow[1]] = 'O';\n  //             }\n  //             break;\n  //         case 2:\n  //             for (let i = prow[1]; i < prow[1] + shipLength; i++) {\n  //                 playerState.board[prow[0]][i] = 'O';\n  //             }\n  //             break;\n  //         case 3:\n  //             for (let i = prow[0] - (shipLength - 1); i < prow[0]; i++) {\n  //                 playerState.board[i][prow[1]] = 'O';\n  //             }\n  //             break;\n  //         case 4:\n  //             for (let i = prow[1] - (shipLength - 1); i < prow[1]; i++) {\n  //                 playerState.board[prow[0]][i] = 'O';\n  //             }\n  //             break;\n  //     }\n  // }\n  // function step() {\n  //     play()\n  //     calculateDensity()\n  // }\n\n\n  useEffect(() => {\n    // generateShip(2)\n    // generateShip(3)\n    // generateShip(3)\n    // generateShip(4)\n    // generateShip(5)\n    placeShips();\n    console.log(playerState.name + \" board: \");\n    console.log(playerState.board);\n  }, [setPlayerState]); // สร้างตารางโดยรับค่า id และ src\n\n  const createCell = (id, src) => {\n    // ถ้าเป็นแถวแรกให้สร้าง header ระบุเลขช่องด้วยนอกจากนั้นก็สร้างแค่ช่องปกติ\n    if (id[0] === 0) {\n      return /*#__PURE__*/_jsxDEV(\"th\", {\n        children: [id[1] + 1, /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"cell parent\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            class: \"image1\",\n            id: id,\n            src: src,\n            onClick: play\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"image2\",\n            children: [\" \", playerState.positions[id[1]].probability, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"cell parent\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        class: \"image1\",\n        id: id,\n        src: src,\n        onClick: play\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"image2\",\n        children: [\" \", playerState.positions[parseInt(id[0].toString()) + id[1].toString()].probability, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.player\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: Array.from({\n        length: 10\n      }).map((_, row) => {\n        var ascii = 65;\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: String.fromCharCode(ascii + row)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 29\n          }, this), Array.from({\n            length: 10\n          }).map((_, col) => {\n            var index = (10 - row - 1) * 10 + (10 - col);\n            var id = [row, col];\n            var src = 'map/' + index + '.jpg';\n            return createCell(id, src);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 386,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Table, \"KzrVYW86ABp7zLDQcs4XITTa6AA=\");\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/gurum/Documents/AI project/battleship/src/components/Table.js"],"names":["Container","Button","useEffect","useState","Table","props","randomness","positions","i","row","Math","floor","col","index","probability","occupied","fired","hit","sunk","w","e","n","s","player","Object","freeze","name","board","Array","from","founded","ships","alive","length","playerState","setPlayerState","tryShip","ship","position","direction","check_position","flag","calculateDensity","current_position","directions","shipName","j","random","hitStreak","checked_position","confirmed","console","log","table","gameover","getRandomInt","min","max","minimum","ceil","maximum","play","found","checkShip","foundShip","notFound","end","clicked","parseInt","target","id","cells","document","getElementsByClassName","innerHTML","src","is_DD_Alive","includes","placeShips","orientation","validPosition","lastPosition","getRandomPosition","createCell","toString","map","_","ascii","String","fromCharCode"],"mappings":"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","sourcesContent":["import { Container, Button } from 'react-bootstrap'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst Table = (props) => {\r\n\r\n    const randomness = 3\r\n\r\n    var positions = []\r\n    for (var i = 0; i < 100; i++) {\r\n        var row = Math.floor(i / 10)\r\n        var col = i % 10\r\n\r\n        positions[i] = {\r\n            index: i,\r\n            probability: 0,\r\n            occupied: false,\r\n            fired: false,\r\n            hit: false,\r\n            sunk: false,\r\n            row: row,\r\n            col: col\r\n        }\r\n    }\r\n\r\n    for (var i = 0; i < 100; i++) {\r\n        positions[i].w = (positions[i - 1] && positions[i - 1].row === positions[i].row) ? positions[i - 1] : null;\r\n        positions[i].e = (positions[i + 1] && positions[i + 1].row === positions[i].row) ? positions[i + 1] : null;\r\n        positions[i].n = positions[i - 10] ? positions[i - 10] : null;\r\n        positions[i].s = positions[i + 10] ? positions[i + 10] : null;\r\n    }\r\n\r\n    //สร้างรูปแบบ state ของ player\r\n    const player = Object.freeze({\r\n        name: props.player,\r\n        board: [\r\n            ['X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],\r\n            ['X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X']\r\n        ],\r\n        positions: Array.from(positions),\r\n        founded: 0,\r\n        ships: {\r\n            'patrolship': {\r\n                alive: true,\r\n                length: 2\r\n            },\r\n            'submarine': {\r\n                alive: true,\r\n                length: 3\r\n            },\r\n            'destroyer': {\r\n                alive: true,\r\n                length: 3\r\n            },\r\n            'battleship': {\r\n                alive: true,\r\n                length: 4\r\n            },\r\n            'aircraft-carrier': {\r\n                alive: true,\r\n                length: 5\r\n            },\r\n        }\r\n    })\r\n\r\n    //สร้าง plyer state โดยใช้รูปแบบ player\r\n    const [playerState, setPlayerState] = useState(player)\r\n\r\n    function tryShip(ship, position, direction) {\r\n        var check_position = playerState.positions[position]\r\n        var flag = true\r\n\r\n        for (var i = 1; i <= ship.length; i++) {\r\n            if (!check_position || check_position.fired) {\r\n                flag = false\r\n                break\r\n            }\r\n            check_position = check_position[direction]\r\n        }\r\n\r\n        return flag\r\n    }\r\n\r\n    function calculateDensity() {\r\n        var current_position\r\n        var directions = { 'w': null, 'n': null, 'e': null, 's': null };\r\n        for (var i = 0; i < 100; i++) {\r\n            playerState.positions[i].probability = 0\r\n        }\r\n        for (var shipName in playerState.ships) {\r\n            var ship = playerState.ships[shipName]\r\n            if (ship.alive) {\r\n                for (var i = 0; i < 100; i++) {\r\n                    if (tryShip(ship, i, 'e')) {\r\n                        current_position = playerState.positions[i]\r\n                        for (var j = 0; j < ship.length; j++) {\r\n                            current_position.probability++\r\n                            current_position = current_position['e']\r\n                        }\r\n                    }\r\n                    if (tryShip(ship, i, 's')) {\r\n                        current_position = playerState.positions[i]\r\n                        for (var j = 0; j < ship.length; j++) {\r\n                            current_position.probability++\r\n                            current_position = current_position['s']\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (var i = 0; i < 100; i++) {\r\n            if (playerState.positions[i].probability > 0) {\r\n                playerState.positions[i].probability += Math.floor(Math.random() * randomness)\r\n            }\r\n\r\n            if (playerState.positions[i].fired) {\r\n                if (playerState.positions[i].hit && !playerState.positions[i].sunk) {\r\n                    for (var direction in directions) {\r\n                        var hitStreak = 1\r\n                        var checked_position = playerState.positions[i]\r\n                        while (checked_position[direction] && checked_position[direction].hit && !checked_position[direction].confirmed) {\r\n                            hitStreak++\r\n                            checked_position = checked_position[direction]\r\n                        }\r\n                        checked_position = checked_position[direction]\r\n                        if (checked_position && !checked_position.fired) {\r\n                            checked_position.probability += hitStreak * 10\r\n                        }\r\n                    }\r\n                }\r\n                playerState.positions[i].probability = -1\r\n            }\r\n        }\r\n    }\r\n\r\n    calculateDensity()\r\n    \r\n    console.log(\"After re-cal \")\r\n    console.table(playerState.positions)\r\n\r\n    var gameover = false\r\n\r\n    // ฟังก์ชั่นสุ่มเลขโดยรับค่า min max\r\n    function getRandomInt(min, max) {\r\n        const minimum = Math.ceil(min);\r\n        const maximum = Math.floor(max);\r\n\r\n        return Math.floor(Math.random() * (maximum - minimum + 1)) + minimum;\r\n    }\r\n\r\n    // ฟั่งชั่นที่ทำงานเมื่อผู้เล่นกดช่องตาราง \r\n    function play(e) {\r\n        //เช็คว่ามีเรือรึเปล่า\r\n        var found = checkShip(e)\r\n\r\n        // เมื่อเจอเรือให้บวกแต้มฝั่งผู้เล่นที่เจอ\r\n        if (found) {\r\n            foundShip(e)\r\n\r\n            setPlayerState({\r\n                ...playerState,\r\n                founded: playerState.founded + 1\r\n            })\r\n            // เมื่อแต้มครบ จบเกม\r\n            if (playerState.founded === 10) {\r\n                gameover = true\r\n            }\r\n        }\r\n        else {\r\n            notFound(e)\r\n        }\r\n\r\n        //เช็คว่าเกมจบรึยัง\r\n        if (gameover) {\r\n            //เมื่อจบแล้วไปแสดงหน้าจบเกม\r\n            end()\r\n        }\r\n    }\r\n\r\n    // ฟังก์ชั่นสุ่มสำหรับเซ็กว่าผู้เล่นยิงโดนเรือตรงข้ามหรือไม่\r\n    function checkShip(e) {\r\n        // ให้ตัวแปล clicked เก็บตำแหน่งที่ผู้เล่นกด\r\n        var clicked = [parseInt(e.target.id[0]), parseInt(e.target.id[2])]\r\n        console.log(\"Clicked at \" + clicked)\r\n        // เช็คว่าเจอเรือไหม (เรือ: \"O\")\r\n        if (!(playerState.board[clicked[0] + 1][clicked[1] + 1] === \"-\")) {\r\n            playerState.board[clicked[0] + 1][clicked[1] + 1] = \"x\"\r\n            console.log(\"Position at \" + playerState.positions[parseInt(e.target.id[0] + e.target.id[2])].index)\r\n            playerState.positions[parseInt(e.target.id[0] + e.target.id[2])].fired = true\r\n            playerState.positions[parseInt(e.target.id[0] + e.target.id[2])].hit = true\r\n            console.log('After hit')\r\n            console.table(playerState.positions)\r\n            calculateDensity()\r\n            var cells = document.getElementsByClassName(\"image2\")\r\n            for (var i = 0; i < 100; i++) {\r\n                cells[i].innerHTML = playerState.positions[i].probability\r\n            }\r\n\r\n            return true\r\n        } else {\r\n            playerState.positions[parseInt(e.target.id[0] + e.target.id[2])].fired = true\r\n            console.log('After fired ')\r\n            console.table(positions)\r\n            calculateDensity()\r\n            var cells = document.getElementsByClassName(\"image2\")\r\n            for (var i = 0; i < 100; i++) {\r\n                cells[i].innerHTML = playerState.positions[i].probability\r\n            }\r\n\r\n            return false\r\n        }\r\n    }\r\n\r\n    function notFound(e) {\r\n        console.log(playerState.name + ': nothing here...')\r\n        e.target.src = 'https://tmsvalue.co.uk/wp-content/uploads/2017/03/Square-500x500-red.png'\r\n    }\r\n\r\n    function foundShip(e) {\r\n        var is_DD_Alive = true\r\n        for (var i = 0; i < 12; i++) {\r\n            console.log(playerState.board[i])\r\n            if ((playerState.board[i].includes(\"DD\"))) {\r\n                is_DD_Alive = true\r\n                break;\r\n            } else is_DD_Alive = false\r\n        }\r\n\r\n        console.log(playerState.name + ': FOUND SHIP!!!')\r\n        if (!is_DD_Alive) {\r\n            console.log('Destroyer Ship Sunk!')\r\n        }\r\n        // if(!(part_id.includes(\"DD\"))){\r\n        //     console.log('Destroyer Ship Sunk!')\r\n        // }\r\n\r\n        e.target.src = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR9qcrQeLufxv61jZ194tG5CJvux0p4U4-r2g&usqp=CAU'\r\n        console.log(playerState.board)\r\n    }\r\n\r\n    function end() {\r\n        console.log(playerState.name + 'WIN!!!')\r\n    }\r\n\r\n    /* ต้องลงได้ทั้ง 4 ทิศ ถึงจะผ่าน */\r\n    // function placeable(head, length) {\r\n    //     try {\r\n    //         for (let axis = 0; axis < 2; axis++) {\r\n    //             for (let i = head[axis] - (length - 1); i < head[axis] + (length - 1); i++) {\r\n    //                 let temp\r\n\r\n    //                 if (axis === 0)\r\n    //                     temp = playerState.board[i][head[1]]\r\n    //                 else\r\n    //                     temp = playerState.board[head[0]][i]\r\n\r\n    //                 if (temp === '-') {\r\n    //                     continue\r\n    //                 }\r\n    //                 else {\r\n    //                     /* ถ้าวางไม่ได้ ยกเลิกทันที */\r\n    //                     return false\r\n    //                 }\r\n    //             }\r\n    //         }\r\n\r\n    //         return true\r\n\r\n    //     } catch (TypeError) {\r\n    //         /* โค้ดไม่ได้แยกแยะเรื่องหลุดแมพ ทำให้ TypeError ถ้าเลือกขอบแมพแล้วขนาดยาวจนเกิน Board (เกิน Length array ของ board) ซึ่งถ้าเป็นแบบนี้มันลงไม่ได้อยู่แล้ว return false ไปเลย*/\r\n    //         return false\r\n    //     }\r\n    // }\r\n\r\n    function placeShips() {\r\n\t\tvar index, orientation, validPosition = false, lastPosition;\r\n\t\tfor(var ship in playerState.ships) {\r\n\t\t\twhile(!validPosition) {\r\n\t\t\t\tindex = getRandomPosition();\r\n\t\t\t\torientation = (Math.random() * 2 > 1) ? 'e' : 's';\r\n\t\t\t\tif (tryShip(playerState.ships[ship], index, orientation, 'occupied')) {\r\n\t\t\t\t\tvalidPosition = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlastPosition = playerState.positions[index];\r\n\t\t\tfor (var i = 0; i < playerState.ships[ship].length; i++) {\r\n\t\t\t\tlastPosition.occupied = true;\r\n\t\t\t\tlastPosition = lastPosition[orientation];\r\n\t\t\t}\r\n\t\t\tplayerState.ships[ship].position = index;\r\n\t\t\tvalidPosition = false;\r\n\t\t}\r\n\t}\r\n\r\n    function getRandomPosition() {\r\n\t\treturn Math.floor(Math.random() * 100);\r\n\t}\r\n\r\n    // function generateShip(shipLength) {\r\n    //     let prow = []\r\n    //     let isPlaceable\r\n\r\n    //     do {\r\n    //         for (let axis = 0; axis < 2; axis++) {\r\n    //             prow[axis] = getRandomInt(0, 10)\r\n    //         }\r\n    //         isPlaceable = placeable(prow, shipLength)\r\n    //     } while (!isPlaceable)\r\n\r\n    //     playerState.board[prow[0]][prow[1]] = 'O'\r\n    //     /* วางเรือ แบบสุ่มทิศ */\r\n    //     switch (getRandomInt(1, 4)) {\r\n    //         case 1:\r\n    //             for (let i = prow[0]; i < prow[0] + shipLength; i++) {\r\n    //                 playerState.board[i][prow[1]] = 'O';\r\n    //             }\r\n    //             break;\r\n    //         case 2:\r\n    //             for (let i = prow[1]; i < prow[1] + shipLength; i++) {\r\n    //                 playerState.board[prow[0]][i] = 'O';\r\n    //             }\r\n    //             break;\r\n    //         case 3:\r\n    //             for (let i = prow[0] - (shipLength - 1); i < prow[0]; i++) {\r\n    //                 playerState.board[i][prow[1]] = 'O';\r\n    //             }\r\n    //             break;\r\n    //         case 4:\r\n    //             for (let i = prow[1] - (shipLength - 1); i < prow[1]; i++) {\r\n    //                 playerState.board[prow[0]][i] = 'O';\r\n    //             }\r\n    //             break;\r\n    //     }\r\n    // }\r\n\r\n    // function step() {\r\n    //     play()\r\n    //     calculateDensity()\r\n    // }\r\n\r\n    useEffect(() => {\r\n        // generateShip(2)\r\n        // generateShip(3)\r\n        // generateShip(3)\r\n        // generateShip(4)\r\n        // generateShip(5)\r\n        placeShips()\r\n        console.log(playerState.name + \" board: \")\r\n        console.log(playerState.board)\r\n    }, [setPlayerState])\r\n\r\n    // สร้างตารางโดยรับค่า id และ src\r\n    const createCell = (id, src) => {\r\n \r\n        // ถ้าเป็นแถวแรกให้สร้าง header ระบุเลขช่องด้วยนอกจากนั้นก็สร้างแค่ช่องปกติ\r\n        if (id[0] === 0) {\r\n            return (\r\n                <th>\r\n                    {id[1] + 1}\r\n                    <td className='cell parent'>\r\n                        <img class=\"image1\" id={id} src={src} onClick={play} />\r\n                        <div class=\"image2\"> {playerState.positions[id[1]].probability} </div>\r\n                    </td>\r\n                </th>\r\n            )\r\n        }\r\n        return (\r\n            <td className='cell parent'>\r\n                <img class=\"image1\" id={id} src={src} onClick={play} />\r\n                <div class=\"image2\"> {playerState.positions[(parseInt(id[0].toString()) + (id[1].toString()))].probability} </div>\r\n            </td>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h2>{props.player}</h2>\r\n            <table>\r\n\r\n                {Array.from({ length: 10 }).map((_, row) => {\r\n\r\n                    var ascii = 65\r\n                    return (\r\n                        <tr>\r\n                            <th>\r\n                                {String.fromCharCode(ascii + row)}\r\n                            </th>\r\n                            {Array.from({ length: 10 }).map((_, col) => {\r\n                                var index = ((10 - row - 1) * 10) + (10 - col)\r\n                                var id = [row, col]\r\n                                var src = 'map/' + index + '.jpg'\r\n                                return (\r\n                                    createCell(id, src)\r\n                                )\r\n\r\n                            })}\r\n                        </tr>\r\n                    )\r\n                })}\r\n            </table>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Table\r\n"]},"metadata":{},"sourceType":"module"}