{"ast":null,"code":"export const AI = () => {\n  var max_position;\n  var table = document.getElementById('gurumi');\n  var cells = table.getElementsByClassName('image1');\n  var positions = Array.from(table.getElementsByClassName('gurumi image2'));\n  console.log(positions); // randomly pick cell\n  // Give a value\n  // Click highest\n  // Calculate adjacent\n  // Give -1 \n};\n_c = AI;\n\nfunction calculateNextPos(playerState) {\n  for (var i = 0; i < 100; i++) {\n    playerState.positions[i].probability = 0;\n  }\n\n  for (var i = 0; i < 100; i++) {\n    if (playerState.positions[i].fired) {\n      if (playerState.positions[i].hit && !playerState.positions[i].sunk) {\n        for (var direction in directions) {\n          var checked_position = playerState.positions[i];\n\n          while (checked_position[direction] && checked_position[direction].hit && !checked_position[direction].sunk) {\n            checked_position = checked_position[direction];\n          }\n\n          checked_position = checked_position[direction];\n\n          if (checked_position && !checked_position.fired) {\n            checked_position.probability += hitStreak * 100;\n          }\n        }\n      }\n    }\n  }\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AI\");","map":{"version":3,"sources":["F:/Code/Project/AI-project/battleship/src/AI/AI_team2.js"],"names":["AI","max_position","table","document","getElementById","cells","getElementsByClassName","positions","Array","from","console","log","calculateNextPos","playerState","i","probability","fired","hit","sunk","direction","directions","checked_position","hitStreak"],"mappings":"AAAA,OAAO,MAAMA,EAAE,GAAG,MAAM;AACpB,MAAIC,YAAJ;AAEA,MAAIC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAZ;AACA,MAAIC,KAAK,GAAGH,KAAK,CAACI,sBAAN,CAA6B,QAA7B,CAAZ;AACA,MAAIC,SAAS,GAAGC,KAAK,CAACC,IAAN,CAAWP,KAAK,CAACI,sBAAN,CAA6B,eAA7B,CAAX,CAAhB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ,EANoB,CAQpB;AACA;AACA;AACA;AACA;AACH,CAbM;KAAMP,E;;AAeb,SAASY,gBAAT,CAA0BC,WAA1B,EAAuC;AACnC,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1BD,IAAAA,WAAW,CAACN,SAAZ,CAAsBO,CAAtB,EAAyBC,WAAzB,GAAuC,CAAvC;AACH;;AAED,OAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1B,QAAID,WAAW,CAACN,SAAZ,CAAsBO,CAAtB,EAAyBE,KAA7B,EAAmC;AAC/B,UAAIH,WAAW,CAACN,SAAZ,CAAsBO,CAAtB,EAAyBG,GAAzB,IAAgC,CAACJ,WAAW,CAACN,SAAZ,CAAsBO,CAAtB,EAAyBI,IAA9D,EAAoE;AAChE,aAAK,IAAIC,SAAT,IAAsBC,UAAtB,EAAkC;AAC9B,cAAIC,gBAAgB,GAAGR,WAAW,CAACN,SAAZ,CAAsBO,CAAtB,CAAvB;;AACA,iBAAOO,gBAAgB,CAACF,SAAD,CAAhB,IAA+BE,gBAAgB,CAACF,SAAD,CAAhB,CAA4BF,GAA3D,IAAkE,CAACI,gBAAgB,CAACF,SAAD,CAAhB,CAA4BD,IAAtG,EAA4G;AAExGG,YAAAA,gBAAgB,GAAGA,gBAAgB,CAACF,SAAD,CAAnC;AACH;;AACDE,UAAAA,gBAAgB,GAAGA,gBAAgB,CAACF,SAAD,CAAnC;;AACA,cAAIE,gBAAgB,IAAI,CAACA,gBAAgB,CAACL,KAA1C,EAAiD;AAC7CK,YAAAA,gBAAgB,CAACN,WAAjB,IAAgCO,SAAS,GAAG,GAA5C;AACH;AACJ;AACJ;AACJ;AACJ;AACJ","sourcesContent":["export const AI = () => {\r\n    var max_position\r\n\r\n    var table = document.getElementById('gurumi')\r\n    var cells = table.getElementsByClassName('image1')\r\n    var positions = Array.from(table.getElementsByClassName('gurumi image2'))\r\n    console.log(positions)\r\n\r\n    // randomly pick cell\r\n    // Give a value\r\n    // Click highest\r\n    // Calculate adjacent\r\n    // Give -1 \r\n}\r\n\r\nfunction calculateNextPos(playerState) {\r\n    for (var i = 0; i < 100; i++) {\r\n        playerState.positions[i].probability = 0\r\n    }\r\n\r\n    for (var i = 0; i < 100; i++) {\r\n        if (playerState.positions[i].fired){\r\n            if (playerState.positions[i].hit && !playerState.positions[i].sunk) {\r\n                for (var direction in directions) {\r\n                    var checked_position = playerState.positions[i]\r\n                    while (checked_position[direction] && checked_position[direction].hit && !checked_position[direction].sunk) {\r\n\r\n                        checked_position = checked_position[direction]\r\n                    }\r\n                    checked_position = checked_position[direction]\r\n                    if (checked_position && !checked_position.fired) {\r\n                        checked_position.probability += hitStreak * 100\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}